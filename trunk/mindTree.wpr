#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'filter': 'All Source Files',
                        'include_hidden': 0,
                        'recursive': 0},
                       {'dirloc': loc('Plugins'),
                        'excludes': [u'HTMLArchiver/articles.trans'],
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1},
                       {'dirloc': loc('Resources'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1},
                       {'dirloc': loc('DocumentWriter'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1},
                       {'dirloc': loc('UnitTests'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': 0,
                        'recursive': 1,
                        'watch_for_changes': 1}]
proj.file-type = 'normal'
proj.main-file = loc('MindTree.py')
[user attributes]
debug.breakpoints = {loc('../Python24/Lib/lib-tk/Tkdnd.py'): {280: (0,
        None,
        1,
        0),
        288: (0,
              None,
              1,
              0),
        293: (0,
              None,
              1,
              0)},
                     loc('StyledText.py'): {1507: (0,
        None,
        1,
        0),
        1512: (0,
               None,
               1,
               0)},
                     loc('unknown:<untitled> #1'): {10: (0,
        None,
        1,
        0)}}
debug.debug-probe-history = {loc('MindTree.py'): ['len(subtreePath)\n',
        'subtreePath[0]\n',
        'self._treeView.hlist.__dict__\n',
        'self._treeView.hlist.dnd_start\n',
        'filename\n',
        'self._doc\n',
        'self._archiver._extension\n',
        'sys.exc_info()\n',
        'info[2]\n',
        'data\n',
        "data.find( '\\xac' )\n",
        "data.find( u'\\u00ac' )\n",
        'info = sys.exc_info()\n',
        'traceback.print_exception( *info )\n',
        "u'<a href=\"%s#%s\" target=\"baseframe\">%s</a>' % (notesName, item"\
        ".id, articleName )\n",
        "f=open('test.txt', 'w' )\n",
        "f.write( u'abcde\\u00AC' )\n",
        'traceback.print_exception( sys.exc_info( ) )\n',
        'import sys\n',
        'import traceback\n',
        'traceback.print_exception( *sys.exc_info( ) )\n',
        'self._msp._handler._macros\n',
        'self.__tixTreeInstance.info( )\n',
        'self.__childWidgets.keys()\n',
        'self.__childWidgets\n',
        'self.dnd_enter\n',
        'self._childWidgets\n',
        'len(self._childWidgets)\n',
        'fromIdx\n',
        'toIdx\n',
        'isinstance(fromIdx,int)\n',
        'isinstance(toIdx,int)\n',
        'self._path\n',
        'self._path[0:5]\n',
        'self._path[fromIdx:toIdx]\n',
        'foducWidget.__class__\n',
        'focusWidget.__class__\n',
        'focusWidget.text\n',
        'focusWidget.__class__.__name__\n',
        "self._macros[ 'see' ]\n",
        "self._macros[ 'see' ]._params\n",
        "self._macros[ 'see' ]._value\n",
        "self._macros[ 'see.name' ]._value\n",
        "self._macros[ 'bookmark.def.assert' ]._value\n",
        'self._macros.keys()\n',
        "self._msp._macros[ 'bookmark.def.assert' ]._value\n",
        'self._msp.handler\n',
        'self._msp._handler\n',
        "self._msp._handler._macros[ 'bookmark.def.assert' ]\n",
        'self._msp._handler._macros.keys()\n',
        "self._msp._handler._macros[ 'bookmark.def.proposition' ]\n",
        "self._msp._handler._macros[ 'bookmark.def.proposition' ]._value\n",
        "self._msp._handler._macros[ 'bookmark.name' ]._value\n",
        "self._macros[ 'bookmark.name' ]._value\n",
        "self._macros[ 'article.id' ]._value\n",
        "self._msp._handler._macros[ 'bookmark.def.assert' ]._value\n",
        'self._articleCount\n',
        'self._view._treeDoc\n',
        'Tree.ForewardTreeIterator\n',
        'ForewardTreeIterator\n',
        'i = ForewardTreeIterator( self._view._treeDoc )\n',
        'n = i.next( )\n',
        'slice\n',
        'config\n',
        'config.config\n',
        'self._treeView\n',
        'self._view\n',
        'self._view._noteView\n',
        'self._view._noteView.edit_modified()\n',
        'module\n',
        'module.plugin\n',
        'MT_Plugin\n',
        'Plugin.MT_Plugin\n',
        'Plugin.MT_Plugin.getOpt\n',
        "Plugin.MT_Plugin.getOpt( 'Find.style' )\n",
        "Plugin.MT_Plugin.getOpt( self, 'Find.style' )\n",
        "super( Plugin.MT_ToolPlugin, self ).getOpt( 'Find.style' )\n",
        "super( Plugin.MT_ToolPlugin ).getOpt( 'Find.style' )\n",
        'os.path.isfile("e:\\\\swdev\\\\mindtree2\\\\logic.xml" )\n',
        'buffer\n',
        'self\n',
        'self.__dict__\n',
        'dragSitex\n',
        'self.__tixTreeInstance\n',
        'self.__dict__.keys()\n',
        'self._tixTreeInstance\n',
        'self._tixTreeInstance.__dict__.keys()\n',
        'self._tixTreeInstance.info_bbox\n',
        "self._tixTreeInstance.info_bbox( '1339' )\n",
        "htree.bbox( '1339' )\n",
        'dragSite\n',
        'htree\n',
        'htree = self._tixTreeInstance\n',
        "htree.info_bbox( '1339' )\n",
        "htree.info_bbox('1339')\n",
        'dragSiteBBox\n',
        'dragSiteBBox.split( )\n',
        'plugin\n',
        'resources.RES\n',
        'RES\n'],
                             loc('test.py'): ['mod\n',
        'mod.__class__\n',
        'm.__class__\n']}
debug.err-values = {None: {},
                    loc('../Modules/FontChooser.py'): {},
                    loc('../Program Files/Wing IDE 3.1/patches/3.1.0/01-doctest-globals/src/testing/runners/run_unittests_xml.py'): {},
                    loc('../Program Files/Wing IDE 3.1/src/testing/runners/run_unittests_xml.py'): {},
                    loc('../Python24/Lib/lib-tk/Tkdnd.py'): {},
                    loc('DocumentWriter/ObjectText.py'): {},
                    loc('DocumentWriter/TextItem.py'): {},
                    loc('EnhancedText.py'): {},
                    loc('FancyText.py'): {'stack[1].locals.self': (-2,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<error handling value>',
        None,
        None,
        0)},
                    loc('MindTree.py'): {'stack[10].globals.splash': (-2,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<error handling value>',
        None,
        None,
        0),
        'stack[11].locals.buffer': (-4,
                                    30,
                                    None,
                                    '0x151ea28',
                                    '__builtin__',
                                    8,
                                    'str',
                                    1,
                                    None,
                                    None,
                                    (),
                                    0),
        'stack[13].locals.self': (-2,
                                  None,
                                  None,
                                  'error',
                                  None,
                                  1,
                                  None,
                                  1,
                                  '<error handling value>',
                                  None,
                                  None,
                                  0),
        'stack[1].locals.self': (-2,
                                 None,
                                 None,
                                 'error',
                                 None,
                                 1,
                                 None,
                                 1,
                                 '<error handling value>',
                                 None,
                                 None,
                                 0),
        'stack[2].locals.self': (-2,
                                 None,
                                 None,
                                 'error',
                                 None,
                                 1,
                                 None,
                                 1,
                                 '<error handling value>',
                                 None,
                                 None,
                                 0),
        'stack[3].globals.splash': (-2,
                                    None,
                                    None,
                                    'error',
                                    None,
                                    1,
                                    None,
                                    1,
                                    '<error handling value>',
                                    None,
                                    None,
                                    0),
        'stack[3].locals.self': (-2,
                                 None,
                                 None,
                                 'error',
                                 None,
                                 1,
                                 None,
                                 1,
                                 '<error handling value>',
                                 None,
                                 None,
                                 0),
        'stack[4].globals.splash': (-2,
                                    None,
                                    None,
                                    'error',
                                    None,
                                    1,
                                    None,
                                    1,
                                    '<error handling value>',
                                    None,
                                    None,
                                    0),
        'stack[4].locals.self': (-2,
                                 None,
                                 None,
                                 'error',
                                 None,
                                 1,
                                 None,
                                 1,
                                 '<error handling value>',
                                 None,
                                 None,
                                 0),
        'stack[5].globals.splash': (-2,
                                    None,
                                    None,
                                    'error',
                                    None,
                                    1,
                                    None,
                                    1,
                                    '<error handling value>',
                                    None,
                                    None,
                                    0),
        'stack[5].locals.self': (-2,
                                 None,
                                 None,
                                 'error',
                                 None,
                                 1,
                                 None,
                                 1,
                                 '<error handling value>',
                                 None,
                                 None,
                                 0),
        'stack[6].locals.self': (-2,
                                 None,
                                 None,
                                 'error',
                                 None,
                                 1,
                                 None,
                                 1,
                                 '<error handling value>',
                                 None,
                                 None,
                                 0),
        'stack[7].globals.splash': (-2,
                                    None,
                                    None,
                                    'error',
                                    None,
                                    1,
                                    None,
                                    1,
                                    '<error handling value>',
                                    None,
                                    None,
                                    0),
        'stack[7].locals.master': (-2,
                                   None,
                                   None,
                                   'error',
                                   None,
                                   1,
                                   None,
                                   1,
                                   '<error handling value>',
                                   None,
                                   None,
                                   0),
        'stack[7].locals.self': (-2,
                                 None,
                                 None,
                                 'error',
                                 None,
                                 1,
                                 None,
                                 1,
                                 '<error handling value>',
                                 None,
                                 None,
                                 0),
        'stack[8].globals.splash': (-2,
                                    None,
                                    None,
                                    'error',
                                    None,
                                    1,
                                    None,
                                    1,
                                    '<error handling value>',
                                    None,
                                    None,
                                    0),
        'stack[9].globals.splash': (-2,
                                    None,
                                    None,
                                    'error',
                                    None,
                                    1,
                                    None,
                                    1,
                                    '<error handling value>',
                                    None,
                                    None,
                                    0),
        'stack[9].locals.self': (-2,
                                 None,
                                 None,
                                 'error',
                                 None,
                                 1,
                                 None,
                                 1,
                                 '<error handling value>',
                                 None,
                                 None,
                                 0),
        'stack[current=9].globals.splash': (-2,
        None,
        None,
        'error',
        None,
        1,
        None,
        1,
        '<error handling value>',
        None,
        None,
        0)},
                    loc('MindTree.pyw'): {},
                    loc('Plugins/BonsaiXMLImporter/Translator.py'): {},
                    loc('test.py'): {},
                    loc('test1.py'): {},
                    loc('test3.py'): {},
                    loc('test4.py'): {}}
debug.exceptions-ignored = {loc('../Python24/Lib/lib-tk/Tix.py'): {326: 0},
                            loc('../Python24/Lib/lib-tk/Tkinter.py'): {1654: 1},
                            loc('../Python25/Lib/lib-tk/Tix.py'): {326: 1},
                            loc('../Python25/Lib/lib-tk/Tkinter.py'): {1721: 1},
                            loc('<string>'): {1: 1},
                            loc('TreeEditor.py'): {267: 1,
        350: 1,
        351: 1,
        353: 1}}
debug.shell-history = {None: [' (,)\n',
                              'x = (,)\n',
                              'x = (1,)\n',
                              'y = x[0:0]\n',
                              'y\n',
                              'y[0]\n',
                              'entryText\n',
                              'None == None\n',
                              'len(subtreePath)\n',
                              "os.path.exists( 'c:\\' )\n",
                              "os.path.exists( r'c:\\' )\n",
                              "os.path.exists( 'c:\\\\' )\n",
                              "os.path.exists( 'c:\\\\personal\\\\will.doc' "\
                              ")\n",
                              "os.path.exists( 'c:\\\\personal\\\\x.doc' )\n",
                              "os.path.exists( 'c:\\\\personal' )\n",
                              "os.path.exists( 'c:\\\\personal\\\\' )\n",
                              'import os.path\n',
                              'import tkclipboard\n',
                              'import Tix\n',
                              'root = Tix.Tk()\n',
                              'root.withdraw()\n',
                              'splash = Tix.Toplevel()\n',
                              'splash.overrideredirect(1)\n',
                              "Tix.Label( splash, image=TkTools.image( 'spla"\
                              "sh', 'images' ) ).pack( )\n",
                              "img = Tix.PhotoImage( 'images\\\\splash.gif' "\
                              ")\n",
                              'Tix.Label( splash, image=img ).pack( )\n',
                              "x = '\\xac'\n",
                              'x\n',
                              "u = unicode( x, 'latin1' )\n",
                              'u\n',
                              '0xac\n',
                              '[].pop()\n',
                              'if None:\n',
                              "   print 'x'\n",
                              'd = dequeue()\n',
                              'd = deque()\n',
                              'import collections\n',
                              'd = collections.deque()\n',
                              'import Tkinter as Tk\n',
                              'root = Tk.Tk()\n',
                              '(1, 2) + (3, 4)\n',
                              '      Y = 10\n',
                              'class T:\n',
                              '   X = 20\n',
                              '   def __init__( self ):\n',
                              '      self.Y = 10\n',
                              't = T()\n',
                              't.Y\n',
                              't.X\n',
                              "'s' is str\n",
                              "isinstance( 'x', str )\n",
                              "isinstance( 'x', basestring )\n",
                              'x=10\n',
                              'v = (0 < x <= 100)\n',
                              'v\n',
                              "s = '*' * 10\n",
                              "int( '45' )\n",
                              "s = ''\n",
                              'def addChars( s ):\n',
                              "   s += 'hello'\n",
                              'addChars( s )\n',
                              'addChars( s_ref )\n',
                              "   s.obj += 'hello'\n",
                              'class Ref:\n',
                              '   def __init__( self, obj ):\n',
                              '      self.obj = obj\n',
                              'def addChars( s_ref ):\n',
                              "   s_ref.obj += 'hello'\n",
                              'addChars( Ref(s) )\n',
                              "s='\"12345\"'\n",
                              's\n',
                              's[1:-1]\n',
                              'for c in s:\n',
                              '   print c\n',
                              'd = dict()\n',
                              'd.favorite\n',
                              'import Tkinter\n',
                              'root = Tkinter.Tk()\n',
                              "root.options_set( 'x', 10 )\n",
                              "root.options_set( 'x', '10' )\n",
                              "root.option_set( 'x', 10 )\n",
                              "root.option_set( 'x', '10' )\n",
                              "root.option_add( 'x', 10 )\n",
                              "root.option_get( 'x' )\n",
                              "root.option_add( 'x', '10' )\n",
                              "root.option_get( 'x', '' )\n",
                              "root.option_get( 'x', '*' )\n",
                              "root.option_add( '*x', 10 )\n",
                              "root.option_get( 'x', 'a' )\n",
                              "root.option_add( '*y', 1 )\n",
                              "root.option_get( '*y', 'a' )\n",
                              "root.option_add( '*y', [ 1, 2, 3 ] )\n",
                              "root.option_get( 'y', 'a' )\n",
                              "img = Tkinter.PhotoImage( file='resources\\\\"\
                              "images\\\\file_open.gif' )\n",
                              "root.option_add( '*z', img )\n",
                              "root.option_get( 'z', 'a' )\n",
                              "Label( root, image=root.option_get( 'z', 'a' "\
                              ") ).pack( )\n",
                              "Tkinter.Label( root, image=root.option_get( '"\
                              "z', 'a' ) ).pack( )\n",
                              'root.pack()\n',
                              'root.mainloop()\n']}
debug.var-col-widths = [0.64759725400457668,
                        0.35240274599542332]
edit.show-tab-force-warning = False
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '3EwzbP6Oxu20GDNHHRRZbo2yvP'\
        '3VaK4Y',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [0,
                                   0],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.18117647058823527,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': 0,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(0,)],
                                 'selected-nodes': [(0,
        1)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../Python24/Lib/lib-tk/Tix.py'): {''\
        'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../Python24/Lib/lib-tk/Tix.py'),
                      'ACROSSTOP')]},
        loc('DocumentWriter/DocumentWriter.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('DocumentWriter/DocumentWriter.py'),
                      'DIALOG_FONT')]},
        loc('FullyQualifiedFilePaht.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        u'By Module': {'column-widths': [1.0],
                       'expanded-nodes': [],
                       'selected-nodes': [[('generic attribute',
        loc('DocumentWriter/__init__.py'),
        '')]],
                       'top-node': [('generic attribute',
                                     loc('DocumentWriter/__init__.py'),
                                     '')]},
        loc('../Python24/Lib/lib-tk/Tkdnd.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../Python24/Lib/lib-tk/Tkdnd.py'),
                      'DndHandler')]},
        loc('../Python24/Lib/lib-tk/Tkinter.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../Python24/Lib/lib-tk/Tkinter.py'),
                      'At')]},
        loc('../Python24/lib/linecache.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../Python24/lib/linecache.py'),
                      '__all__')]},
        loc('../Python25/Lib/unittest.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../Python25/Lib/unittest.py'),
                      'defaultTestLoader')]},
        loc('AppTest.py'): {'column-widths': None,
                            'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('class def',
        loc('AppTest.py'),
        'DocumentArchiver')]},
        loc('BonsaiXMLArchiver.py'): {'column-widths': None,
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('class def',
        loc('BonsaiXMLArchiver.py'),
        'BonsaiXMLArchive')]},
        loc('BonsaiXMLImporter.py'): {'column-widths': None,
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('class def',
        loc('BonsaiXMLImporter.py'),
        'OutlineBuilder')]},
        loc('DocEditingApp.py'): {'column-widths': None,
                                  'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('DocEditingApp.py'),
        'DocumentArchiver')]},
        loc('DocumentWriter/EnhancedText.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('DocumentWriter/EnhancedText.py'),
                      'EnhancedText')]},
        loc('DocumentWriter/ObjectText.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('DocumentWriter/ObjectText.py'),
                      'addLinkBtn')]},
        loc('DocumentWriter/StyledText.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('DocumentWriter/StyledText.py'),
                      'Font')]},
        loc('FullyQualifiedFileName.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('FullyQualifiedFileName.py'),
                      'FullyQualifiedFileName')]},
        loc('HTMLArchiver/MacroProcessor.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('HTMLArchiver/MacroProcessor.py'),
                      'BasicMacroEvaluator')]},
        loc('HTMLArchiver/hgen.py'): {'column-widths': None,
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('class def',
        loc('HTMLArchiver/hgen.py'),
        'HTMLBuilder')]},
        loc('MT_TreeWidget.py'): {'column-widths': None,
                                  'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('MT_TreeWidget.py'),
        'Dragable')]},
        loc('MindTree.ini'): {'column-widths': None,
                              'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': None},
        loc('MindTree.py'): {'column-widths': None,
                             'expanded-nodes': [],
                             'selected-nodes': [],
                             'top-node': [('generic attribute',
        loc('MindTree.py'),
        'archiver')]},
        loc('MindTree.pyw'): {'column-widths': [1.0],
                              'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('class def',
        loc('MindTree.pyw'),
        'Dragable')]},
        loc('TkTools/BonsaiXMLArchiver.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('TkTools/BonsaiXMLArchiver.py'),
                      'BonsaiXMLArchive')]},
        loc('TkTools/DialogBase.py'): {'column-widths': None,
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('TkTools/DialogBase.py'),
        'DialogBase')]},
        loc('TkTools/TkTools.py'): {'column-widths': None,
                                    'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('function def',
        loc('TkTools/TkTools.py'),
        'command')]},
        loc('Translator.py'): {'column-widths': None,
                               'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('class def',
        loc('Translator.py'),
        'TranslationEntry')]},
        loc('Tree.py'): {'column-widths': None,
                         'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('class def',
                                       loc('Tree.py'),
                                       'ForewardTreeIterator')]},
        loc('TreeEditor.py'): {'column-widths': [1.0],
                               'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('class def',
        loc('TreeEditor.py'),
        'Dragable')]},
        loc('TreeUnitTests.py'): {'column-widths': None,
                                  'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('class def',
        loc('TreeUnitTests.py'),
        'EmptyTreeTests')]},
        loc('UnitTests/TreePathUnitTests.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('UnitTests/TreePathUnitTests.py'),
                      'EmptyListTreePathUnitTest')]},
        loc('UnitTests/TreeUnitTests.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('UnitTests/TreeUnitTests.py'),
                      'EmptyTreeTests')]},
        loc('XmlOutlineParser.py'): {'column-widths': None,
                                     'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('XmlOutlineParser.py'),
        'OutlineBuilder')]},
        loc('config.py'): {'column-widths': None,
                           'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('config.py'),
        'CASE_SENSATIVE_PATTERN')]},
        loc('tkApplicationFramework.py'): {'column-widths': None,
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('tkApplicationFramework.py'),
                      'Application')]},
        loc('ver 11/MindTree.py'): {'column-widths': [1.0],
                                    'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('class def',
        loc('ver 11/MindTree.py'),
        'Dragable')]},
        loc('unknown:<untitled> #3'): {'column-widths': None,
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #2'),
        'DocumentArchiver')]},
        loc('unknown:<untitled> #5'): {'column-widths': None,
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #4'),
        'App')]},
        loc('unknown:<untitled> #7'): {'column-widths': None,
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #6'),
        'Document')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': 0,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': 0,
        u'Imported': 0,
        u'Inherited': 0,
        u'Modules': 1}})],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [2,
                          0],
        'notebook_display': 'tabs only',
        'notebook_percent': 0.36047774158523349,
        'override_title': None,
        'pagelist': [('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 2,
                       'sel-line-start': 48,
                       'selection_end': 48,
                       'selection_start': 48}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['testData\n',
        'class X( object ):\n'],
                                   u'file:C:/Program Files/Wing IDE 3.1/patches/3.1.0/01-doctest-globals/src/testing/runners/run_unittests_xml.py': [''\
        'self.text.winfo_height\n',
        'self.text.winfo_height()\n',
        'self.text.winfo_width()\n',
        "self.text['font']\n"],
                                   u'file:C:/Program Files/Wing IDE 3.1/src/testing/runners/run_unittests_xml.py': [''\
        'self.path\n',
        'tp = TreePath()\n',
        'tp[1:10]\n',
        'x = tp[1:10]\n',
        'x\n',
        'self.id\n'],
                                   u'file:E:/SWDEV/MindTree/DocumentWriter/ObjectText.py': [''\
        'STObject._text\n',
        'self.NAME_SEP\n',
        'self._text\n',
        'import sys\n',
        'sys.exc_info()\n',
        'Link_STObject.POPUP\n',
        'self._url\n',
        "Link_STObject.POPUP.entrycget(0,'label')\n",
        "Link_STObject.POPUP.entrycget(2,'label')\n",
        "Link_STObject.POPUP.entryconfig( 1, label='123' )\n",
        "Link_STObject.POPUP.entrycget(1,'label')\n",
        'Link_STObject.POPUP.entrycget()\n',
        'Link_STObject.POPUP.entryconfig()\n',
        'STObjectFactory.objectTypeLib\n',
        'type(ClassName )\n',
        'self\n',
        'self._objectLib\n'],
                                   u'file:E:/SWDEV/MindTree/DocumentWriter/TextItem.py': [""\
        "self._parent.dump( '1.0', 'end' )\n",
        'import pprint\n',
        'self._tagName\n',
        "pprint.pprint( self._parent.dump( '1.0', 'end' ) )\n"],
                                   u'file:E:/SWDEV/MindTree/FancyText.py': [''\
        'docData[0]\n',
        'le\n',
        'text.config()\n',
        'text.config().keys()\n',
        'self.makeFontTuple()\n',
        "x.cget( 'background' )\n",
        "self._styles[ 'underline' ]\n",
        'x = self._currentStyle.makeOptionDictionary()\n',
        'x\n',
        'self._stylesCombo\n',
        'self._stylesCombo.__dict__\n',
        'self._stylesCombo.subwidget_list\n',
        'self._stylesCombo.subwidgets_all\n',
        "self._stylesCombo.subwidget( 'listbox' )\n",
        'self._currentStyle\n',
        'styleName\n',
        "self._styles[ 'Old' ]\n",
        'self._currentStyleName.get()\n',
        'styleName.get()\n',
        'self._background.get()\n',
        'self._currentStyle._attributes\n',
        "self._styles[ 'old' ]._attributes\n",
        "self._styles[ 'Old' ]._attributes\n",
        "self._styles[ 'New' ]._attributes\n",
        'self._bgButton\n',
        "theStyle[ 'family' ]\n",
        "theStyle[ 'size' ]\n",
        'self._font.get()\n',
        'id(self._styles)\n',
        'id(self.DEFAULT_STYLE)\n',
        'id(styles)\n',
        'if styles:\n',
        "   print 'True'\n",
        'id(globalStyles)\n',
        'globalStyles\n',
        'self._underline\n',
        'self._underline.get()\n',
        "self._styles[ 'normal-bold' ]\n",
        'self._styles\n',
        "self._styles[ 'normal_bold' ]\n",
        "self._styles[ 'normal_bold' ]._attributes\n"],
                                   u'file:E:/SWDEV/MindTree/MindTree.py': [''\
        'self._currentStyleName.get()\n',
        'self._styleNameListWidget.get(0)\n',
        'theDump\n',
        'finalReport\n',
        'activeTags\n',
        'dump\n',
        'self._chkr.word\n',
        'self._chkr.wordpos\n',
        'self.config\n',
        'self.config()\n',
        "self.config( 'spacing1' )\n",
        "self[ 'spacing1' ]\n",
        'options\n',
        "self[ 'spacing2' ]\n",
        "self.effectiveStyling( 'insert' )\n",
        "self._styleLib[ 'default' ]\n",
        "self._styleLib[ 'default' ].tagOptions()\n",
        'Style.DEFAULT_STYLE\n',
        "self[ 'spacing3' ]\n",
        'Font.DEFAULT_FONT\n',
        'Font.DEFAULT_FONT.tagOptions()\n',
        "aTextWidget['spacing3']\n",
        'Style.DEFAULT_STYLE.tagOptions()\n',
        'articleFont\n',
        "self.index('end')\n",
        "self.index( '3.end' )\n",
        "self.dline_start( '3.84' )\n",
        'self.tag_names( index)\n',
        "self.tag_names( 'insert' )\n",
        "self.index('insert')\n",
        "self.index('insert +1 chars')\n",
        'self.tag_names( startIndex )\n',
        'event.keysym\n',
        'self._path\n',
        'self._path[ -1 ]\n',
        'self._entryWidget\n',
        'self._entryWidget[0]\n',
        "self._entryWidget['0']\n",
        "self._entryWidget['1']\n",
        "self._entryWidget['2']\n",
        "self._entryWidget['3']\n",
        'break\n',
        "self._treeView.hlist[ 'height' ]\n",
        'self._treeView.hlist.nearest( 100 )\n',
        'self._treeView.hlist.nearest( 200 )\n',
        'self._treeView.hlist.nearest( 4000 )\n',
        'self._treeView.hlist.nearest( 5000 )\n',
        'self._treeView.hlist.nearest( 8000 )\n',
        'self._treeView.hlist.nearest( -1 )\n',
        "self['height']\n",
        'self._treeView.winfo_height()\n',
        "self.index( '@20,600' )\n",
        'self._backupDirectory\n',
        "self.tag_ranges( 'sel' )\n",
        'len(self._treeEntry.article)\n',
        'theDoc\n',
        'theDoc[1]\n',
        'pprint( theDoc)\n',
        'aDocument[0]\n',
        'aDocument[1]\n',
        "self._styleLib['default']\n",
        "self.tag_config( 'default' )\n",
        'theNewFont.fontName()\n',
        'theNewFont.tagOptions()\n',
        'self._styleLib\n',
        'self._insertTags[0]\n',
        'newAttrib.tagOptions()\n',
        "self.tag_config( '_attribute_underline_false' )\n",
        'opts\n',
        'Font.getFont(name).opts()\n',
        'self._insertStyleString\n',
        'self._insertTags\n',
        'self.winfo_width()\n',
        'self.winfo_height()\n',
        "self.index( '@880,404' )\n",
        "self.index( '@880,400' )\n",
        "self.index( '@880,395' )\n",
        "self.bbox('10.15')\n",
        "self.index( 'end -1 chars' )\n",
        "self.dlineinfo( '4.0' )\n",
        "self.dlineinfo( '4.100' )\n",
        "self.dlineinfo( '4.120' )\n",
        'from pprint import pprint\n',
        'pprint(article)\n',
        "self.tag_config( '_style_default' )\n",
        'import sys\n',
        'sys.exc_info()\n',
        "self.tag_ranges( '_style_defauld' )\n",
        "self.tag_ranges( '_style_default' )\n",
        "self.tag_raise( '_style_Header 2', '_style_default' )\n",
        'self._treeDoc.subtree( thePath )\n',
        'self._currentEntry\n',
        'type( self._currentEntry )\n',
        'itemPath.parentPath()\n',
        'str(itemPath.parentPath())\n',
        'self.tag_names( index )\n',
        'self.tag_raise( newTagName )\n',
        'self._filename\n',
        'self._archiver\n',
        'entryPath\n'],
                                   u'file:E:/SWDEV/MindTree/test3.py': ['tkM'\
        'ath.coordToPixels(coord1)\n',
        'int(tkMath.coordToPixels(coord1))\n'],
                                   u'file:E:/SWDEV/MindTree/test4.py': ["ord"\
        "(';')\n",
        'ord(event.char)\n',
        'len(event.char)\n',
        '32 <= ord(event.char) <= 127\n'],
                                   u'file:E:/SWDEV/MindTree/test6.py': ["cb["\
        "'command']\n",
        "cb['command'] = None\n",
        'cb.config(command=None)\n',
        'cb.config(command=CB2)\n',
        "cb.config(command='none')\n",
        "cb.cget('command')\n"],
                                   u'file:E:/SWDEV/MindTree4 - SingleDoc/MindTree.py': [''\
        'plugin\n',
        'self._view\n',
        'self._model\n',
        'aModel\n',
        'parentNB\n',
        'parentNB.winfo_toplevel()\n',
        'aView\n',
        'self\n'],
                                   u'file:E:/SWDEV/MindTree4/FancyText.py': [""\
        "self._text.getStyleRegions( '1.0', Tk.END )\n",
        "self.text.index( '_bookmark_2' )\n",
        'activeStyles\n',
        'styleRangeList\n',
        "self._text.text.tag_remove( 'normal_bold', '1.0', '1.4' )\n"],
                                   u'file:E:/SWDEV/Modules/FontChooser.py': [''\
        'self._showStyles\n'],
                                   u'file:F:/SWDEV/MindTree/MindTree.py': [''\
        'self.note\n',
        'self._stext\n',
        'self._stext.styles()\n',
        'style\n',
        'Style.DEFAULT_STYLE\n',
        'event.char\n',
        'self._selectionAnchor\n',
        'event\n'],
                                   u'file:c:/mindtree/MindTree.py': ['self._'\
        'filename\n',
        'self._backupDir\n',
        'self._projectDir\n'],
                                   u'file:e:/SWDEV/MindTree4/FancyText.py': [''\
        'self._text.index( Tk.SEL )\n',
        'self._text\n',
        'self._text.styleNames\n',
        'self._styles\n',
        'self._styles.keys()\n',
        'self._styles.keys().sort()\n',
        'self._selection\n',
        'self.selectedRegion()\n',
        "opts['font'].actual( )\n",
        'self.text.tag_cget( aStyleName )\n',
        "self.text.tag_cget( aStyleName, 'font' )\n",
        "self.text.tag_cget( 'normal-overstrike', 'font' )\n",
        "f = self.text.tag_cget( 'normal-overstrike', 'font' )\n",
        'f\n',
        'type(f)\n',
        'f = self.text.cget( )\n',
        'f = self.text.configure( )\n',
        'Font\n',
        "opts[ 'font' ]\n",
        "opts[ 'font' ].actual()\n",
        "self._text.text.tag_cget( 'normal-bold' )\n",
        "self.nametowidget( 'font18945408' )\n",
        "self._text.text.tag_cget( 'normal-bold', 'font' )\n",
        "Font.nametofont( 'font18945408' )\n",
        'Font.names()\n',
        'f = Font.Font()\n',
        'f.names()\n',
        "self._text.text.tag_config( 'normal-bold', font=Font( bold=True ) )"\
        "\n",
        "self._text.text.tag_config( 'normal-bold', font=Font.Font( bold=Tru"\
        "e ) )\n",
        "self._text.text.tag_config( 'normal-bold', font=Font.Font( weight=F"\
        "ont.BOLD ) )\n",
        "opts[ 'font'].actual()\n",
        'self.text.tag_names()\n',
        "self._text.text.dump( '1.0', Tk.END )\n"],
                                   u'file:e:/SWDEV/MindTree4/MindTree.py': [''\
        'self.location\n',
        'locationStr()\n',
        'self.locationStr()\n'],
                                   u'file:e:/SWDEV/MindTree4/Plugins/BonsaiXMLImporter/Translator.py': [''\
        'testData\n',
        'testData[73]\n',
        'line\n',
        'print line\n',
        'print unicode(line)\n',
        'unicode(line)\n',
        'self._suffixRegEx\n',
        'aString\n',
        'out\n'],
                                   u'file:f:/SWDEV/MindTree/MindTree.py': [''\
        'os.getcwd()\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 3,
                       'folded-linenos': [],
                       'history': {None: ['x.remove( None )\n',
        'x = { 1:1, 2:2 }\n',
        'x[None]\n',
        'text = Text( root )\n',
        "text.tag_config( 'x', underline=True )\n",
        "text.tag_config( 'y', overstrike=True )\n",
        "text.tag_add( 'y', '1.0', 'end' )\n",
        "text.tag_raise( 'y', 'x' )\n",
        "help('sys' )\n",
        'def f( ):\n',
        '   print __name__\n',
        'dir(f)\n',
        'def f():\n',
        '   print func_name\n',
        'f()\n',
        'root = Tk()\n',
        '[].__getslice__( 1, 10 )\n',
        '[].[0:3]\n',
        '[][0:3]\n',
        '[].pop()\n',
        '[].append(None)\n',
        'x = []\n',
        'x.append()\n',
        'x.append(None)\n',
        "tree.insert( Tree(), TreePath( 'x' ), Tree.CHILD )\n",
        "tree.insert( Tree(), TreePath( 'x' ), Tree.BEFORE ) )\n",
        "tree.insert( Tree(), TreePath( 'x' ), Tree.BEFORE )\n",
        "tree.insert( Tree(), TreePath( 'x' ), Tree.AFTER )\n",
        'tree.insert( Tree(), TreePath( ), Tree.CHILD )\n',
        'str(tree)\n',
        'tree.insert( Tree, TreePath(), Tree.BEFORE )\n',
        'from Tree import *\n',
        'tree = Tree()\n',
        'tree.insert( Tree(), TreePath(), Tree.BEFORE )\n',
        "tree.insert( 'x', TreePath(), Tree.BEFORE )\n",
        'from TkTools import *\n',
        "splitFilePath( '' )\n",
        "splitFilePath( 'c:' )\n",
        "splitFilePath( 'c:\\' )\n",
        "splitFilePath( 'c:\\\\' )\n",
        "splitFilePath( '\\\\' )\n",
        "splitFilePath( 'doc.txt' )\n",
        "splitFilePath( 'doc' )\n",
        "splitFilePath( 'filename.txt' )\n",
        "splitFilePath( 'dir1\\\\dir2' )\n",
        "splitFilePath( 'dir1\\\\dir2\\\\' )\n",
        "splitFilePath( 'dir1\\\\dir2\\\\filename' )\n",
        "splitFilePath( 'dir1\\\\dir2\\\\dir3\\\\filename' )\n",
        "splitFilePath( 'dir1\\\\dir2\\\\dir3\\\\filename.txt' )\n",
        "splitFilePath( 'c:\\\\dir1\\\\dir2\\\\dir3\\\\filename.txt' )\n",
        "splitFilePath( 'c:dir1\\\\dir2\\\\dir3\\\\filename.txt' )\n",
        "splitFilePath( 'c:\\\\dir\\\\filename' )\n",
        "splitFilePath( 'c:dir\\\\filename' )\n",
        "splitFilePath( 'c:\\\\dir\\\\filename.txt' )\n",
        "splitFilePath( 'c:\\\\dir1\\\\dir2\\dir3\\\\filename' )\n",
        'import Tix\n',
        'def x( ):\n',
        'Tix.HList.info_bbox = x\n',
        'class A( object ):\n',
        'def x( self ):\n',
        '   print "externally defined fn"\n',
        'A.fn = x\n',
        'anA = A()\n',
        'anA.fn()\n',
        'fn in A\n',
        'dir(A)\n',
        'class C( object ):\n',
        '   pass\n',
        'def f( self ):\n',
        "   print 'here'\n",
        'C.f = f\n',
        'c = C()\n',
        'c.f()\n',
        'import uuid\n',
        'str(uuid.uuid4())\n',
        'repr(uuid.uuid4())\n',
        'a = uuid.uuid4()\n',
        'b = uuid.uuid4()\n',
        'a\n',
        'b\n',
        'a == b\n',
        'import copy\n',
        'c = copy.copy( a )\n',
        'a == c\n',
        'x = [ ]\n',
        "x.append('a')\n",
        'x\n',
        'import tkMessageBox\n',
        'uuid.uuid4()\n',
        'from Tkinter import *\n',
        'r = tk()\n',
        'r = Tk()\n',
        't = Text( r )\n',
        't.configure( wrap=True )\n',
        't.configure( wrap=1 )\n',
        't.configure( wrap=true )\n',
        "t.configure( wrap='1' )\n",
        "t.configure( wrap='word' )\n",
        't.pack()\n',
        'r.mainloop()\n']},
                       'sel-line': 2,
                       'sel-line-start': 145,
                       'selection_end': 149,
                       'selection_start': 149}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'current-file'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': 1,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 44,
                                       'fReplaceText': u'anchor',
                                       'fReverse': False,
                                       'fSearchText': u'ArticleEditor',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': 1},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'current-file'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 44,
                                       'fReplaceText': u'Application',
                                       'fReverse': False,
                                       'fSearchText': u'EnhancedText',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('UnitTests/TreeUnitTests.py'),
                                       loc('UnitTests/TreePathUnitTests.py'),
                                       loc('UnitTests/EnhancedTextUnitTests.py')],
                       'filter': '',
                       'recent-filters': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        'self._styles')],
                       'tree-state': {'column-widths': [0.64745762711864407,
        0.35254237288135593],
                                      'expanded-nodes': [],
                                      'selected-nodes': [(0,)],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('DocumentWriter/StyledText.py'),
        {'attrib-starts': [('StyledText',
                            651),
                           ('StyledText._load',
                            1035)],
         'first-line': 440,
         'folded-linenos': [294,
                            307,
                            315,
                            332,
                            346,
                            371,
                            374,
                            385,
                            389,
                            474,
                            493,
                            510,
                            527,
                            537,
                            542,
                            573,
                            582,
                            596,
                            655,
                            666,
                            735,
                            744,
                            749,
                            753,
                            770,
                            779,
                            833,
                            885,
                            920,
                            950,
                            967,
                            994,
                            1004,
                            1102,
                            1108,
                            1120],
         'sel-line': 1088,
         'sel-line-start': 43860,
         'selection_end': 43860,
         'selection_start': 43860},
        1224001327.632),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 440,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001328.632),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 440,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001330.1170001),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 440,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001331.6170001),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 437,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43885,
          'selection_start': 43885},
         1224001340.1949999),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 437,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001433.1630001),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 437,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001435.6630001),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 437,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001437.648),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 437,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001438.648),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 437,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001440.148),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 437,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001441.148),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 437,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001442.148),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText.insert',
                             692)],
          'first-line': 347,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1102,
                             1108,
                             1120],
          'sel-line': 700,
          'sel-line-start': 28356,
          'selection_end': 28356,
          'selection_start': 28356},
         1224001445.148),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             651),
                            ('StyledText._load',
                             1035)],
          'first-line': 313,
          'folded-linenos': [294,
                             307,
                             315,
                             332,
                             346,
                             371,
                             374,
                             385,
                             389,
                             474,
                             493,
                             510,
                             527,
                             537,
                             542,
                             573,
                             582,
                             596,
                             655,
                             666,
                             687,
                             692,
                             735,
                             744,
                             749,
                             753,
                             770,
                             779,
                             833,
                             885,
                             920,
                             950,
                             967,
                             994,
                             1004,
                             1035,
                             1102,
                             1108,
                             1120],
          'sel-line': 1088,
          'sel-line-start': 43860,
          'selection_end': 43860,
          'selection_start': 43860},
         1224001448.6630001),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [289,
                             302,
                             310,
                             327,
                             341,
                             366,
                             369,
                             380,
                             384,
                             469,
                             488,
                             505,
                             522,
                             532,
                             537,
                             568,
                             577,
                             591,
                             650,
                             661,
                             682,
                             687,
                             730,
                             739,
                             744,
                             748,
                             765,
                             774,
                             828,
                             880,
                             915,
                             945,
                             962,
                             989,
                             999,
                             1030,
                             1097,
                             1103,
                             1115],
          'sel-line': 12,
          'sel-line-start': 174,
          'selection_end': 174,
          'selection_start': 174},
         1224001521.1789999),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [],
          'first-line': 11,
          'folded-linenos': [284,
                             297,
                             305,
                             322,
                             336,
                             361,
                             364,
                             375,
                             379,
                             464,
                             483,
                             500,
                             517,
                             527,
                             532,
                             563,
                             572,
                             586,
                             645,
                             656,
                             677,
                             682,
                             725,
                             734,
                             739,
                             743,
                             760,
                             769,
                             823,
                             875,
                             910,
                             940,
                             957,
                             984,
                             994,
                             1025,
                             1092,
                             1098,
                             1110],
          'sel-line': 27,
          'sel-line-start': 787,
          'selection_end': 787,
          'selection_start': 787},
         1224001531.382),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('Style',
                             469),
                            ('Style.setupDefaults',
                             586)],
          'first-line': 294,
          'folded-linenos': [284,
                             297,
                             305,
                             322,
                             336,
                             361,
                             364,
                             375,
                             379,
                             464,
                             483,
                             500,
                             517,
                             527,
                             532,
                             563,
                             572,
                             586,
                             645,
                             656,
                             677,
                             725,
                             734,
                             739,
                             743,
                             760,
                             769,
                             823,
                             875,
                             910,
                             940,
                             957,
                             984,
                             994,
                             1025,
                             1092,
                             1098,
                             1110],
          'sel-line': 586,
          'sel-line-start': 22965,
          'selection_end': 22968,
          'selection_start': 22968},
         1224001550.1949999),
        (loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             641),
                            ('StyledText.insert',
                             682)],
          'first-line': 0,
          'folded-linenos': [284,
                             297,
                             305,
                             322,
                             336,
                             361,
                             364,
                             375,
                             379,
                             464,
                             483,
                             500,
                             517,
                             527,
                             532,
                             563,
                             572,
                             586,
                             645,
                             656,
                             677,
                             682,
                             724,
                             733,
                             738,
                             742,
                             759,
                             768,
                             822,
                             874,
                             909,
                             939,
                             956,
                             983,
                             993,
                             1024,
                             1091,
                             1097,
                             1109],
          'sel-line': 703,
          'sel-line-start': 28465,
          'selection_end': 28465,
          'selection_start': 28465},
         1224001555.1630001),
        [loc('DocumentWriter/EnhancedText.py'),
         {'attrib-starts': [('EnhancedText',
                             312),
                            ('EnhancedText.dline_end',
                             372)],
          'first-line': 3,
          'folded-linenos': [7,
                             11,
                             23,
                             36,
                             149,
                             179,
                             246,
                             256,
                             271,
                             280,
                             286,
                             292,
                             303,
                             316,
                             324,
                             331,
                             338,
                             345,
                             353,
                             361,
                             372,
                             383,
                             414,
                             457,
                             505,
                             515,
                             553,
                             563],
          'sel-line': 372,
          'sel-line-start': 12079,
          'selection_end': 12106,
          'selection_start': 12106},
         1224001576.023],
        [loc('DocumentWriter/StyledText.py'),
         {'attrib-starts': [('StyledText',
                             641),
                            ('StyledText.insert',
                             682)],
          'first-line': 0,
          'folded-linenos': [284,
                             297,
                             305,
                             322,
                             336,
                             361,
                             364,
                             375,
                             379,
                             464,
                             483,
                             500,
                             517,
                             527,
                             532,
                             563,
                             572,
                             586,
                             645,
                             656,
                             677,
                             682,
                             724,
                             733,
                             738,
                             742,
                             759,
                             768,
                             822,
                             874,
                             909,
                             939,
                             956,
                             983,
                             993,
                             1024,
                             1091,
                             1097,
                             1109],
          'sel-line': 703,
          'sel-line-start': 28465,
          'selection_end': 28465,
          'selection_start': 28465},
         1224001578.6789999]],
        19),
        'current-loc': loc('DocumentWriter/StyledText.py'),
        'editor-states': {loc('DocumentWriter/DocumentWriter.py'): {'attrib-'\
        'starts': [('PyWrite',
                    783),
                   ('PyWrite.onSave',
                    814)],
        'first-line': 0,
        'folded-linenos': [11,
                           43,
                           76,
                           87,
                           90,
                           91,
                           100,
                           111,
                           126,
                           182,
                           294,
                           379,
                           384,
                           392,
                           408,
                           416,
                           421,
                           449,
                           453,
                           463,
                           466,
                           484,
                           488,
                           494,
                           507,
                           529,
                           533,
                           541,
                           603,
                           633,
                           647,
                           653,
                           662,
                           677,
                           681,
                           687,
                           690,
                           691,
                           705,
                           706,
                           722,
                           743,
                           744,
                           757,
                           767,
                           776,
                           784,
                           798,
                           814],
        'sel-line': 822,
        'sel-line-start': 39961,
        'selection_end': 39999,
        'selection_start': 39991},
                          loc('DocumentWriter/StyledText.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'folded-linenos': [287,
                           300,
                           308,
                           325,
                           339,
                           364,
                           367,
                           378,
                           382,
                           467,
                           486,
                           503,
                           520,
                           530,
                           535,
                           566,
                           575,
                           589,
                           648,
                           659,
                           680,
                           685,
                           727,
                           736,
                           741,
                           745,
                           762,
                           771,
                           825,
                           877,
                           912,
                           942,
                           959,
                           986,
                           996,
                           1027,
                           1094,
                           1100,
                           1112],
        'sel-line': 169,
        'sel-line-start': 7368,
        'selection_end': 7368,
        'selection_start': 7368},
                          loc('MindTree.py'): {'attrib-starts': [],
        'first-line': 21,
        'folded-linenos': [35,
                           45,
                           57,
                           71,
                           130,
                           131,
                           183,
                           193,
                           194,
                           252,
                           277],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 39,
        'selection_start': 0},
                          loc('Outline.py'): {'attrib-starts': [('Outline',
        3),
        ('Outline.__init__',
         4)],
        'first-line': 0,
        'folded-linenos': [4,
                           15,
                           19,
                           25,
                           28,
                           62],
        'sel-line': 7,
        'sel-line-start': 197,
        'selection_end': 225,
        'selection_start': 225},
                          loc('Project.py'): {'attrib-starts': [('Project',
        6),
        ('Project.filename',
         34)],
        'first-line': 0,
        'folded-linenos': [25,
                           28,
                           34,
                           40,
                           46,
                           49,
                           55,
                           58,
                           62,
                           65],
        'sel-line': 36,
        'sel-line-start': 931,
        'selection_end': 931,
        'selection_start': 931},
                          loc('TkTools.py'): {'attrib-starts': [('Path',
        24),
        ('Path.__init__',
         25)],
        'first-line': 0,
        'folded-linenos': [123,
                           234,
                           257,
                           381,
                           442,
                           473,
                           516,
                           525,
                           534,
                           549,
                           605],
        'sel-line': 26,
        'sel-line-start': 816,
        'selection_end': 844,
        'selection_start': 844},
                          loc('Tree.py'): {'attrib-starts': [('TreePath',
        8),
        ('TreePath.__add__',
         53)],
        'first-line': 0,
        'folded-linenos': [3,
                           4,
                           11,
                           28,
                           32,
                           36,
                           40,
                           44,
                           48,
                           53,
                           81,
                           87,
                           95,
                           102,
                           110,
                           118,
                           126,
                           140,
                           164,
                           175,
                           178,
                           231,
                           253,
                           302,
                           319,
                           336,
                           339,
                           342,
                           350,
                           357,
                           364,
                           376,
                           384,
                           387],
        'sel-line': 54,
        'sel-line-start': 1720,
        'selection_end': 1720,
        'selection_start': 1720},
                          loc('TreeEditor.py'): {'attrib-starts': [('TreeEdi'\
        'tor',
        322),
        ('TreeEditor._drawWidget',
         910)],
        'first-line': 61,
        'folded-linenos': [35,
                           38,
                           55,
                           60,
                           72,
                           84,
                           90,
                           93,
                           97,
                           105,
                           109,
                           122,
                           148,
                           160,
                           184,
                           212,
                           243,
                           253,
                           284,
                           287,
                           310,
                           325,
                           347,
                           352,
                           355,
                           369,
                           402,
                           427,
                           450,
                           504,
                           533,
                           575,
                           589,
                           598,
                           607,
                           610,
                           613,
                           621,
                           629,
                           637,
                           644,
                           651,
                           680,
                           710,
                           726,
                           742,
                           757,
                           779,
                           802,
                           808,
                           814,
                           839,
                           868,
                           875,
                           910,
                           938,
                           947,
                           965,
                           999,
                           1031,
                           1049,
                           1052,
                           1061,
                           1079,
                           1085],
        'sel-line': 936,
        'sel-line-start': 34119,
        'selection_end': 34119,
        'selection_start': 34119},
                          loc('tkApplicationFramework.py'): {'attrib-starts': [(''\
        'Archiver',
        18),
        ('Archiver._writeFile',
         125)],
        'first-line': 0,
        'folded-linenos': [8,
                           11,
                           14,
                           19,
                           25,
                           28,
                           31,
                           43,
                           69,
                           117,
                           125,
                           171,
                           187,
                           192,
                           200,
                           204,
                           212,
                           230,
                           241,
                           259,
                           263,
                           267,
                           270,
                           290,
                           301,
                           319,
                           325,
                           329,
                           341,
                           356,
                           376,
                           396,
                           402,
                           405,
                           408,
                           415,
                           419,
                           428,
                           431,
                           456,
                           460,
                           469,
                           473,
                           485,
                           489,
                           492,
                           495,
                           498,
                           501],
        'sel-line': 130,
        'sel-line-start': 4522,
        'selection_end': 4522,
        'selection_start': 4522}},
        'has-focus': True},
                               'open_files': [u'DocumentWriter/DocumentWriter.py',
        u'Outline.py',
        u'Project.py',
        u'tkApplicationFramework.py',
        u'TreeEditor.py',
        u'MindTree.py',
        u'Tree.py',
        u'TkTools.py',
        u'DocumentWriter/StyledText.py']},
        'split_percents': {0: 0.42886386898669399},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (104,
                         51,
                         1103,
                         867)}]}
guimgr.recent-documents = [loc('DocumentWriter/StyledText.py'),
                           loc('TkTools.py'),
                           loc('Tree.py'),
                           loc('MindTree.py'),
                           loc('TreeEditor.py'),
                           loc('tkApplicationFramework.py'),
                           loc('Project.py'),
                           loc('Outline.py'),
                           loc('DocumentWriter/DocumentWriter.py')]
guimgr.visual-state = {loc('../../Python26/Lib/lib-tk/Tix.py'): {'attrib-sta'\
        'rts': [('TixWidget',
                 264),
                ('TixWidget.__init__',
                 277)],
        'first-line': 278,
        'folded-linenos': [],
        'sel-line': 306,
        'sel-line-start': 12803,
        'selection_end': 12803,
        'selection_start': 12803},
                       loc('../Documents and Settings/LongoRH/Desktop/StyledText.py'): {''\
        'attrib-starts': [('StyleEditor',
                           482),
                          ('StyleEditor.onRevertStyle',
                           791)],
        'first-line': 293,
        'sel-line': 791,
        'sel-line-start': 36483,
        'selection_end': 36512,
        'selection_start': 36512},
                       loc('../Documents and Settings/ProvostRH/Desktop/HTML2Text.py'): {''\
        'first-line': 635,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../Documents and Settings/ProvostRH/Desktop/HTML2Text_rhp.py'): {''\
        'first-line': 635,
        'selection_end': 18146,
        'selection_start': 18146},
                       loc('../Documents and Settings/ProvostRH/Desktop/ScrolledTable.py'): {''\
        'first-line': 656,
        'selection_end': 19024,
        'selection_start': 19024},
                       loc('../Documents and Settings/ProvostRH/Desktop/grid.py'): {''\
        'first-line': 597,
        'selection_end': 10426,
        'selection_start': 10426},
                       loc('../Documents and Settings/ProvostRH/Desktop/test.py'): {''\
        'attrib-starts': [('focusChanged',
                           12)],
        'first-line': 0,
        'sel-line': 24,
        'sel-line-start': 595,
        'selection_end': 616,
        'selection_start': 616},
                       loc('../Documents and Settings/ProvostRH/Desktop/tkTree/tkTree/tkTree.py'): {''\
        'first-line': 119,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../MindView/MindView.py'): {'first-line': 51,
        'selection_end': 3508,
        'selection_start': 3508},
                       loc('../ModuleTest/PluginFramework.py'): {'first-line': 0,
        'selection_end': 15,
        'selection_start': 15},
                       loc('../Modules/FontChooser.py'): {'attrib-starts': [(''\
        'FontChooser',
        5),
        ('FontChooser.__init__',
         9)],
        'first-line': 0,
        'sel-line': 26,
        'sel-line-start': 839,
        'selection_end': 909,
        'selection_start': 839},
                       loc('../Modules/Resources/resources.py'): {'attrib-st'\
        'arts': [('Resources',
                  3),
                 ('Resources.makeWidget',
                  8)],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 291,
        'selection_end': 313,
        'selection_start': 313},
                       loc('../Modules/Resources/test.res'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../Program Files/Wing IDE 3.1/patches/3.1.0/01-doctest-globals/src/testing/runners/run_unittests_xml.py'): {''\
        'attrib-starts': [('main',
                           8)],
        'first-line': 0,
        'sel-line': 28,
        'sel-line-start': 732,
        'selection_end': 732,
        'selection_start': 732},
                       loc('../Program Files/Wing IDE 3.1/patches/3.1.0/01-doctest-globals/src/testing/runners/wingtest_common.py'): {''\
        'attrib-starts': [('XmlTestRunner',
                           298),
                          ('XmlTestRunner.run',
                           309)],
        'first-line': 286,
        'sel-line': 316,
        'sel-line-start': 10358,
        'selection_end': 10358,
        'selection_start': 10358},
                       loc('../Python24/Lib/ConfigParser.py'): {'first-line': 220,
        'selection_end': 7630,
        'selection_start': 7630},
                       loc('../Python24/Lib/copy.py'): {'first-line': 65,
        'selection_end': 2585,
        'selection_start': 2585},
                       loc('../Python24/Lib/lib-tk/Tix.py'): {'first-line': 288,
        'selection_end': 13658,
        'selection_start': 13658},
                       loc('../Python24/Lib/lib-tk/Tkdnd.py'): {'first-line': 169,
        'selection_end': 7091,
        'selection_start': 7091},
                       loc('../Python24/Lib/lib-tk/Tkinter.py'): {'first-lin'\
        'e': 1616,
        'selection_end': 69724,
        'selection_start': 69724},
                       loc('../Python24/Lib/lib-tk/tkMessageBox.py'): {'firs'\
        't-line': 58,
        'selection_end': 2128,
        'selection_start': 2128},
                       loc('../Python24/lib/linecache.py'): {'first-line': 0,
        'selection_end': 306,
        'selection_start': 306},
                       loc('../Python25/Lib/ConfigParser.py'): {'attrib-star'\
        'ts': [('ConfigParser',
                492),
               ('ConfigParser.get',
                494)],
        'first-line': 495,
        'folded-linenos': [],
        'sel-line': 519,
        'sel-line-start': 19169,
        'selection_end': 19169,
        'selection_start': 19169},
                       loc('../Python25/Lib/copy.py'): {'attrib-starts': [(''\
        '_copy_with_constructor',
        111)],
        'first-line': 73,
        'sel-line': 112,
        'sel-line-start': 3327,
        'selection_end': 3327,
        'selection_start': 3327},
                       loc('../Python25/Lib/decimal.py'): {'attrib-starts': [(''\
        'Context',
        2233),
        ('Context._raise_error',
         2304)],
        'first-line': 2283,
        'sel-line': 2324,
        'sel-line-start': 81489,
        'selection_end': 81489,
        'selection_start': 81489},
                       loc('../Python25/Lib/lib-tk/Tix.py'): {'attrib-starts': [(''\
        'Tree',
        1516),
        ('Tree.close',
         1536)],
        'first-line': 1513,
        'sel-line': 1538,
        'sel-line-start': 59545,
        'selection_end': 59545,
        'selection_start': 59545},
                       loc('../Python25/Lib/lib-tk/Tkdnd.py'): {'attrib-star'\
        'ts': [('DndHandler',
                117),
               ('DndHandler.on_motion',
                150)],
        'first-line': 135,
        'sel-line': 174,
        'sel-line-start': 7091,
        'selection_end': 7091,
        'selection_start': 7091},
                       loc('../Python25/Lib/lib-tk/Tkinter.py'): {'attrib-st'\
        'arts': [('CallWrapper',
                  1389),
                 ('CallWrapper.__call__',
                  1397)],
        'first-line': 1397,
        'folded-linenos': [],
        'sel-line': 1402,
        'sel-line-start': 57308,
        'selection_end': 57308,
        'selection_start': 57308},
                       loc('../Python25/Lib/lib-tk/tkFont.py'): {'attrib-sta'\
        'rts': [('Font',
                 23),
                ('Font.__init__',
                 65)],
        'first-line': 55,
        'sel-line': 70,
        'sel-line-start': 1993,
        'selection_end': 1993,
        'selection_start': 1993},
                       loc('../Python25/Lib/lib-tk/tkSimpleDialog.py'): {'at'\
        'trib-starts': [('Dialog',
                         30),
                        ('Dialog.__init__',
                         37)],
        'first-line': 30,
        'sel-line': 65,
        'sel-line-start': 1354,
        'selection_end': 1354,
        'selection_start': 1354},
                       loc('../Python25/Lib/ntpath.py'): {'attrib-starts': [(''\
        'normcase',
        37)],
        'first-line': 33,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 1342,
        'selection_end': 1342,
        'selection_start': 1342},
                       loc('../Python25/Lib/pickle.py'): {'attrib-starts': [(''\
        'Pickler',
        170),
        ('Pickler._batch_appends',
         607)],
        'first-line': 591,
        'sel-line': 615,
        'sel-line-start': 23195,
        'selection_end': 23195,
        'selection_start': 23195},
                       loc('../Python25/Lib/re.py'): {'attrib-starts': [('_c'\
        'ompile',
        218)],
        'first-line': 200,
        'sel-line': 232,
        'sel-line-start': 9922,
        'selection_end': 9922,
        'selection_start': 9922},
                       loc('../Python25/Lib/shutil.py'): {'attrib-starts': [(''\
        'copyfile',
        37)],
        'first-line': 28,
        'folded-linenos': [],
        'sel-line': 52,
        'sel-line-start': 1363,
        'selection_end': 1363,
        'selection_start': 1363},
                       loc('../Python25/Lib/site-packages/enchant/__init__.py'): {''\
        'attrib-starts': [('Broker',
                           168),
                          ('Broker._raise_error',
                           212)],
        'first-line': 175,
        'sel-line': 216,
        'sel-line-start': 8457,
        'selection_end': 8457,
        'selection_start': 8457},
                       loc('../Python25/Lib/site-packages/enchant/tokenize/__init__.py'): {''\
        'attrib-starts': [('basic_tokenize',
                           145),
                          ('basic_tokenize.next',
                           157)],
        'first-line': 157,
        'sel-line': 180,
        'sel-line-start': 6745,
        'selection_end': 6745,
        'selection_start': 6745},
                       loc('../Python25/Lib/traceback.py'): {'attrib-starts': [(''\
        'print_tb',
        45)],
        'first-line': 61,
        'sel-line': 66,
        'sel-line-start': 2408,
        'selection_end': 2408,
        'selection_start': 2408},
                       loc('../Python25/Lib/unittest.py'): {'attrib-starts': [(''\
        'TestCase',
        169),
        ('TestCase.failUnlessEqual',
         327)],
        'first-line': 328,
        'sel-line': 333,
        'sel-line-start': 12289,
        'selection_end': 12289,
        'selection_start': 12289},
                       loc('../Python25/Lib/urllib.py'): {'attrib-starts': [(''\
        'URLopener',
        100),
        ('URLopener.open_unknown',
         195)],
        'first-line': 165,
        'sel-line': 198,
        'sel-line-start': 7443,
        'selection_end': 7443,
        'selection_start': 7443},
                       loc('../Python25/Lib/xml/sax/__init__.py'): {'attrib-'\
        'starts': [('parse',
                    28)],
        'first-line': 0,
        'sel-line': 32,
        'sel-line-start': 1203,
        'selection_end': 1203,
        'selection_start': 1203},
                       loc('../Python25/Lib/xml/sax/expatreader.py'): {'attr'\
        'ib-starts': [('ExpatParser',
                       83),
                      ('ExpatParser.parse',
                       99)],
        'first-line': 71,
        'sel-line': 106,
        'sel-line-start': 3255,
        'selection_end': 3255,
        'selection_start': 3255},
                       loc('../Python25/Lib/xml/sax/saxutils.py'): {'attrib-'\
        'starts': [('prepare_input_source',
                    275)],
        'first-line': 255,
        'sel-line': 301,
        'sel-line-start': 9732,
        'selection_end': 9732,
        'selection_start': 9732},
                       loc('../Python25/Lib/xml/sax/xmlreader.py'): {'attrib'\
        '-starts': [('IncrementalParser',
                     90),
                    ('IncrementalParser.parse',
                     114)],
        'first-line': 110,
        'sel-line': 122,
        'sel-line-start': 4749,
        'selection_end': 4749,
        'selection_start': 4749},
                       loc('../Test/mindTree.wpr'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../textTest.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('@'): {'attrib-starts': [],
                                  'first-line': 0,
                                  'folded-linenos': [],
                                  'sel-line': 0,
                                  'sel-line-start': 0,
                                  'selection_end': 0,
                                  'selection_start': 0},
                       loc('AppConstants.py'): {'first-line': 0,
        'selection_end': 178,
        'selection_start': 178},
                       loc('ApplicationFramework.py'): {'attrib-starts': [(''\
        'MVCWidget_View',
        156),
        ('MVCWidget_View.newModel',
         171)],
        'first-line': 354,
        'sel-line': 171,
        'sel-line-start': 5086,
        'selection_end': 5110,
        'selection_start': 5110},
                       loc('Article.py'): {'attrib-starts': [('Article',
        0)],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 33,
        'selection_end': 33,
        'selection_start': 33},
                       loc('BonsaiXMLArchiver.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('BonsaiXMLImporter.py'): {'first-line': 0,
        'selection_end': 2371,
        'selection_start': 2371},
                       loc('DEA/Application.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('DEA/ArchivePlugins.py'): {'first-line': 0,
        'selection_end': 623,
        'selection_start': 623},
                       loc('DEA/Plugin.py'): {'first-line': 0,
        'selection_end': 94,
        'selection_start': 94},
                       loc('DEA/PluginFramework.py'): {'first-line': 0,
        'selection_end': 98,
        'selection_start': 98},
                       loc('DEA/TkApplication.py'): {'first-line': 0,
        'selection_end': 20,
        'selection_start': 20},
                       loc('DocEditingApp.py'): {'attrib-starts': [('Applica'\
        'tion',
        135),
        ('Application.__init__',
         140)],
        'first-line': 0,
        'sel-line': 140,
        'sel-line-start': 4788,
        'selection_end': 4812,
        'selection_start': 4812},
                       loc('DocumentWriter/DocumentWriter.py'): {'attrib-sta'\
        'rts': [('DocumentWriter',
                 540),
                ('DocumentWriter.__init__',
                 541)],
        'first-line': 536,
        'folded-linenos': [],
        'sel-line': 552,
        'sel-line-start': 25881,
        'selection_end': 26362,
        'selection_start': 25881},
                       loc('DocumentWriter/DocumentWriter.txt'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('DocumentWriter/EnhancedText.py'): {'attrib-start'\
        's': [('EnhancedText',
               312),
              ('EnhancedText.dline_end',
               372)],
        'first-line': 3,
        'folded-linenos': [7,
                           11,
                           23,
                           36,
                           149,
                           179,
                           246,
                           256,
                           271,
                           280,
                           286,
                           292,
                           303,
                           316,
                           324,
                           331,
                           338,
                           345,
                           353,
                           361,
                           372,
                           383,
                           414,
                           457,
                           505,
                           515,
                           553,
                           563],
        'sel-line': 372,
        'sel-line-start': 12079,
        'selection_end': 12106,
        'selection_start': 12106},
                       loc('DocumentWriter/ObjectText.py'): {'attrib-starts': [],
        'first-line': 58,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 46,
        'selection_start': 46},
                       loc('DocumentWriter/StyledText.py'): {'attrib-starts': [(''\
        'StyledText',
        649),
        ('StyledText.effectiveStyling',
         882)],
        'first-line': 310,
        'folded-linenos': [],
        'sel-line': 882,
        'sel-line-start': 36293,
        'selection_end': 36332,
        'selection_start': 36332},
                       loc('DocumentWriter/TextItem.py'): {'attrib-starts': [(''\
        'List_TextItem',
        198),
        ('List_TextItem.toRoman',
         232)],
        'first-line': 0,
        'sel-line': 249,
        'sel-line-start': 8239,
        'selection_end': 8583,
        'selection_start': 8239},
                       loc('DocumentWriter/TextPlus.py'): {'attrib-starts': [(''\
        'TextPlus',
        152),
        ('TextPlus.tag_config',
         204)],
        'first-line': 50,
        'sel-line': 213,
        'sel-line-start': 7284,
        'selection_end': 7356,
        'selection_start': 7284},
                       loc('DocumentWriter/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('EnhancedText.py'): {'attrib-starts': [('Enhanced'\
        'TextController',
        89),
        ('EnhancedTextController.typeSpecial',
         194)],
        'first-line': 155,
        'sel-line': 200,
        'sel-line-start': 6805,
        'selection_end': 6822,
        'selection_start': 6822},
                       loc('FullyQualifiedFileName.py'): {'first-line': 33,
        'selection_end': 1254,
        'selection_start': 1254},
                       loc('GUI.py'): {'first-line': 0,
                                       'selection_end': 0,
                                       'selection_start': 0},
                       loc('HTMLArchiver/MacroProcessor.py'): {'first-line': 330,
        'selection_end': 14757,
        'selection_start': 14757},
                       loc('HTMLArchiver/hgen.py'): {'first-line': 151,
        'selection_end': 5124,
        'selection_start': 5124},
                       loc('HTMLGenerator.py'): {'attrib-starts': [('HTMLGen'\
        'erator',
        0)],
        'first-line': 0,
        'sel-line': 12,
        'sel-line-start': 525,
        'selection_end': 604,
        'selection_start': 604},
                       loc('MT_TreeWidget.py'): {'first-line': 53,
        'selection_end': 3496,
        'selection_start': 3496},
                       loc('MVC.py'): {'attrib-starts': [('Controller',
        120),
        ('Controller.open',
         149)],
                                       'first-line': 6,
                                       'sel-line': 161,
                                       'sel-line-start': 3987,
                                       'selection_end': 3988,
                                       'selection_start': 3988},
                       loc('MindTree.ini'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 213,
        'selection_end': 238,
        'selection_start': 238},
                       loc('MindTree.py'): {'attrib-starts': [('MindTree',
        36),
        ('MindTree.find',
         280)],
        'first-line': 24,
        'folded-linenos': [38,
                           48,
                           60,
                           74,
                           133,
                           134,
                           186,
                           196,
                           197,
                           255,
                           280],
        'sel-line': 305,
        'sel-line-start': 14600,
        'selection_end': 14799,
        'selection_start': 14600},
                       loc('MindTree.pyw'): {'first-line': 0,
        'selection_end': 22320,
        'selection_start': 22320},
                       loc('Outline.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 36,
        'selection_start': 36},
                       loc('OutlineWidget.py'): {'attrib-starts': [],
        'first-line': 47,
        'folded-linenos': [30,
                           35,
                           47,
                           59,
                           65,
                           68,
                           72,
                           80,
                           84,
                           97,
                           123,
                           135,
                           159,
                           187,
                           218,
                           228,
                           259,
                           262,
                           285,
                           326,
                           329,
                           343,
                           379,
                           387,
                           412,
                           435,
                           489,
                           550,
                           592,
                           606,
                           615,
                           624,
                           627,
                           630,
                           638,
                           646,
                           654,
                           661,
                           668,
                           697,
                           727,
                           743,
                           759,
                           774,
                           796,
                           819,
                           825,
                           831,
                           856,
                           885,
                           892,
                           927,
                           955,
                           964,
                           982,
                           1016,
                           1048,
                           1066,
                           1069,
                           1078,
                           1095,
                           1101],
        'sel-line': 22,
        'sel-line-start': 601,
        'selection_end': 601,
        'selection_start': 601},
                       loc('Plugin.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('PluginFramework.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 3262,
        'selection_start': 0},
                       loc('Plugins/BonsaiXMLImporter/BonsaiXMLImporter.py'): {''\
        'attrib-starts': [('OutlineParserHandler',
                           64),
                          ('OutlineParserHandler.__init__',
                           65)],
        'first-line': 0,
        'sel-line': 66,
        'sel-line-start': 1563,
        'selection_end': 1579,
        'selection_start': 1579},
                       loc('Plugins/BonsaiXMLImporter/Translator.py'): {'att'\
        'rib-starts': [],
        'first-line': 117,
        'sel-line': 9,
        'sel-line-start': 813,
        'selection_end': 879,
        'selection_start': 879},
                       loc('Plugins/BonsaiXMLImporter/__init__.py'): {'attri'\
        'b-starts': [('BonsaiXMLArchiver',
                      3),
                     ('BonsaiXMLArchiver.__init__',
                      10)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 342,
        'selection_end': 342,
        'selection_start': 342},
                       loc('Plugins/FindTool.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Plugins/FindTool/FindTool.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Plugins/FindTool/__init__.py'): {'attrib-starts': [(''\
        'FindTool',
        5),
        ('FindTool.onFind',
         73)],
        'first-line': 63,
        'folded-linenos': [],
        'sel-line': 91,
        'sel-line-start': 4074,
        'selection_end': 4139,
        'selection_start': 4131},
                       loc('Plugins/HTMLArchiver/MacroProcessor.py'): {'attr'\
        'ib-starts': [],
        'first-line': 122,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Plugins/HTMLArchiver/__init__.py'): {'attrib-sta'\
        'rts': [('HTMLArchiver',
                 6),
                ('HTMLArchiver._writeFile',
                 19)],
        'first-line': 0,
        'sel-line': 40,
        'sel-line-start': 1324,
        'selection_end': 1330,
        'selection_start': 1330},
                       loc('Plugins/HTMLArchiver/articles.mac'): {'attrib-st'\
        'arts': [],
        'first-line': 211,
        'sel-line': 157,
        'sel-line-start': 4915,
        'selection_end': 4915,
        'selection_start': 4915},
                       loc('Plugins/HTMLArchiver/articles.trans'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Plugins/HTMLArchiver/hgen.py'): {'attrib-starts': [(''\
        'HTMLBuilder',
        130),
        ('HTMLBuilder.writeArticle',
         289)],
        'first-line': 287,
        'sel-line': 304,
        'sel-line-start': 9687,
        'selection_end': 9754,
        'selection_start': 9741},
                       loc('Plugins/HTMLArchiver/util.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Plugins/Keyboard/__init__.py'): {'attrib-starts': [(''\
        'Keyboard',
        4),
        ('Keyboard.buildGUI',
         33)],
        'first-line': 26,
        'sel-line': 40,
        'sel-line-start': 1133,
        'selection_end': 1133,
        'selection_start': 1133},
                       loc('Plugins/SpellChecker/__init__.py'): {'attrib-sta'\
        'rts': [('SpellChecker',
                 8)],
        'first-line': 0,
        'sel-line': 14,
        'sel-line-start': 388,
        'selection_end': 424,
        'selection_start': 424},
                       loc('Project.py'): {'attrib-starts': [('Project',
        6),
        ('Project.__init__',
         10)],
        'first-line': 0,
        'folded-linenos': [27,
                           30,
                           54],
        'sel-line': 19,
        'sel-line-start': 438,
        'selection_end': 472,
        'selection_start': 472},
                       loc('StyledText backup 01.py'): {'attrib-starts': [(''\
        'Style',
        262),
        ('Style.__str__',
         464)],
        'first-line': 57,
        'sel-line': 467,
        'sel-line-start': 18515,
        'selection_end': 22377,
        'selection_start': 18515},
                       loc('StyledText backup.py'): {'attrib-starts': [('Sty'\
        'ledText',
        1233),
        ('StyledText.insert',
         1709)],
        'first-line': 612,
        'sel-line': 1710,
        'sel-line-start': 67493,
        'selection_end': 67504,
        'selection_start': 67504},
                       loc('StyledText.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 3,
        'sel-line-start': 40,
        'selection_end': 77,
        'selection_start': 77},
                       loc('TkTools.py'): {'attrib-starts': [('splitFilePath',
        23)],
        'first-line': 22,
        'folded-linenos': [76,
                           187,
                           210,
                           334,
                           395,
                           426,
                           468,
                           502,
                           558],
        'sel-line': 27,
        'sel-line-start': 454,
        'selection_end': 454,
        'selection_start': 454},
                       loc('TkTools/DialogBase.py'): {'first-line': 32,
        'selection_end': 1546,
        'selection_start': 1546},
                       loc('TkTools/DnD List Box.py'): {'first-line': 1,
        'selection_end': 718,
        'selection_start': 712},
                       loc('TkTools/SimpleEntry.py'): {'first-line': 0,
        'selection_end': 21,
        'selection_start': 21},
                       loc('TkTools/TkTools.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('TkTools/__init__.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Tools.py'): {'first-line': 0,
        'selection_end': 35,
        'selection_start': 35},
                       loc('Translator.py'): {'first-line': 0,
        'selection_end': 14653,
        'selection_start': 14653},
                       loc('Tree.py'): {'attrib-starts': [('TreePath',
        7),
        ('TreePath.parentPath',
         76)],
        'first-line': 27,
        'sel-line': 79,
        'sel-line-start': 2437,
        'selection_end': 2437,
        'selection_start': 2437},
                       loc('TreeEditor.py'): {'attrib-starts': [('TreeEditor',
        296),
        ('TreeEditor.deleteSubtree',
         440)],
        'first-line': 43,
        'sel-line': 450,
        'sel-line-start': 15441,
        'selection_end': 15486,
        'selection_start': 15486},
                       loc('TreeUnitTests.py'): {'attrib-starts': [('Populat'\
        'edTreeTests',
        72),
        ('PopulatedTreeTests.testSubtree',
         86)],
        'first-line': 61,
        'sel-line': 92,
        'sel-line-start': 3399,
        'selection_end': 3471,
        'selection_start': 3471},
                       loc('UnitTests/EnhancedTextUnitTests.py'): {'attrib-s'\
        'tarts': [('TestEnhancedText',
                   15),
                  ('TestEnhancedText.testPopulatedText',
                   46)],
        'first-line': 18,
        'sel-line': 54,
        'sel-line-start': 3486,
        'selection_end': 3548,
        'selection_start': 3548},
                       loc('UnitTests/TkToolsUnitTests.py'): {'attrib-starts': [(''\
        'TestTkMath',
        152),
        ('TestTkMath.tearDown',
         158)],
        'first-line': 0,
        'sel-line': 162,
        'sel-line-start': 6555,
        'selection_end': 6555,
        'selection_start': 6555},
                       loc('UnitTests/TreePathUnitTests.py'): {'attrib-start'\
        's': [('MultiElementStringTreePathUnitTest',
               148),
              ('MultiElementStringTreePathUnitTest.setUp',
               153)],
        'first-line': 0,
        'sel-line': 155,
        'sel-line-start': 5341,
        'selection_end': 5369,
        'selection_start': 5369},
                       loc('UnitTests/TreeUnitTests.py'): {'attrib-starts': [(''\
        'PopulatedTreeTests',
        72),
        ('PopulatedTreeTests.testRemove',
         202)],
        'first-line': 0,
        'sel-line': 229,
        'sel-line-start': 10708,
        'selection_end': 10708,
        'selection_start': 10708},
                       loc('UnitTests/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Untitled1'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('WebPage/test.html'): {'attrib-starts': [],
        'first-line': 14535,
        'sel-line': 14565,
        'sel-line-start': 788729,
        'selection_end': 788743,
        'selection_start': 788743},
                       loc('XmlOutlineParser.py'): {'first-line': 50,
        'selection_end': 1136,
        'selection_start': 1136},
                       loc('cbTest.py'): {'first-line': 0,
        'selection_end': 411,
        'selection_start': 411},
                       loc('changeHIstory.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('config.py'): {'attrib-starts': [('setOpt',
        40)],
        'first-line': 0,
        'sel-line': 52,
        'sel-line-start': 1017,
        'selection_end': 1017,
        'selection_start': 1017},
                       loc('experiment NewText/MVC_StyledText.py'): {'attrib'\
        '-starts': [('Document',
                     22),
                    ('Document.__init__',
                     23)],
        'first-line': 0,
        'sel-line': 28,
        'sel-line-start': 617,
        'selection_end': 617,
        'selection_start': 617},
                       loc('experiment NewText/StyledEditor.py'): {'attrib-s'\
        'tarts': [('StyledText',
                   835),
                  ('StyledText.reinitialize',
                   851)],
        'first-line': 102,
        'sel-line': 851,
        'sel-line-start': 38880,
        'selection_end': 38921,
        'selection_start': 38921},
                       loc('experiment Tk App Kit/resource.py'): {'attrib-st'\
        'arts': [],
        'first-line': 169,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('recent.ini'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 49,
        'selection_end': 49,
        'selection_start': 49},
                       loc('resources.py'): {'attrib-starts': [('MindtreeRes'\
        'ources',
        5),
        ('MindtreeResources.loadValues',
         9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 593,
        'selection_end': 627,
        'selection_start': 627},
                       loc('setup.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 82,
        'selection_end': 87,
        'selection_start': 87},
                       loc('test.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 12,
        'selection_start': 12},
                       loc('test1.py'): {'attrib-starts': [('TextWriter',
        1391),
        ('TextWriter.editStyles',
         1705)],
        'first-line': 111,
        'sel-line': 1711,
        'sel-line-start': 73815,
        'selection_end': 73815,
        'selection_start': 73815},
                       loc('test2.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 27,
        'sel-line-start': 813,
        'selection_end': 813,
        'selection_start': 813},
                       loc('test3.py'): {'attrib-starts': [('Text_STObject',
        231)],
        'first-line': 95,
        'sel-line': 233,
        'sel-line-start': 6844,
        'selection_end': 6847,
        'selection_start': 6847},
                       loc('test4.py'): {'attrib-starts': [],
        'first-line': 145,
        'sel-line': 34,
        'sel-line-start': 1119,
        'selection_end': 1156,
        'selection_start': 1156},
                       loc('test5.py'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 10,
        'sel-line-start': 275,
        'selection_end': 299,
        'selection_start': 299},
                       loc('test6.py'): {'attrib-starts': [('CB2',
        6)],
        'first-line': 0,
        'sel-line': 8,
        'sel-line-start': 112,
        'selection_end': 112,
        'selection_start': 112},
                       loc('text.py'): {'attrib-starts': [('Style',
        5),
        ('Style.__init__',
         6)],
        'first-line': 0,
        'sel-line': 35,
        'sel-line-start': 1291,
        'selection_end': 1335,
        'selection_start': 1335},
                       loc('tkApplicationFramework.py'): {'attrib-starts': [(''\
        'Application',
        136),
        ('Application.initializePlugins',
         175)],
        'first-line': 0,
        'folded-linenos': [8,
                           11,
                           14,
                           19,
                           25,
                           28,
                           31,
                           43,
                           69,
                           117,
                           126,
                           141,
                           159,
                           164,
                           175,
                           179,
                           195,
                           221,
                           232,
                           250,
                           260,
                           270,
                           273,
                           293,
                           311,
                           317,
                           321,
                           333,
                           348,
                           368,
                           388,
                           394,
                           397,
                           400,
                           407,
                           411,
                           420,
                           423,
                           448,
                           452,
                           461,
                           465,
                           477,
                           481,
                           484,
                           487,
                           490,
                           493],
        'sel-line': 175,
        'sel-line-start': 5829,
        'selection_end': 5873,
        'selection_start': 5873},
                       loc('untitled-1.py'): {'attrib-starts': [('StyleEdito'\
        'r',
        229),
        ('StyleEditor.__init__',
         237)],
        'first-line': 9,
        'sel-line': 246,
        'sel-line-start': 10245,
        'selection_end': 10281,
        'selection_start': 10281},
                       loc('untitled-2.py'): {'attrib-starts': [('View',
        2),
        ('View.clearModifiedFlag',
         13)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 295,
        'selection_end': 298,
        'selection_start': 298},
                       loc('ver 04/mindTree.wpr'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #15'): {'attrib-starts': [('O'\
        'utlineViewFactory',
        0)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 17,
        'selection_start': 17},
                       loc('unknown:<untitled> #25'): {'attrib-starts': [],
        'first-line': 3,
        'history': {},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #26'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #27'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #28'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #29'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #30'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #31'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['from ConfigParser import RawConfigParser\n',
                           'c = RawConfigParser( )\n',
                           "c.options( 'x' )\n",
                           "{ 'a':1 }.update( None )\n",
                           'from ConfigParser import *\n',
                           'c = ConfigParser( )\n',
                           "c.set( 'DEFAULT', 'x', '123' )\n",
                           "c.add_section( 'Y' )\n",
                           "c.set( 'Y', 'z', 'abc-%(x)s' )\n",
                           "c.set( 'DEFAULT', 'x', 'abc' )\n",
                           "c.get( 'Y', 'z' )\n",
                           'def deprecated( fn ):\n',
                           '   print "Warning:  %s has been deprecated." % f'\
                           'n.__name__\n',
                           '   return fn\n',
                           '@deprecated\n',
                           'def X(fn ):\n',
                           '   return X\n',
                           '@X\n',
                           'data = [ x for x in range(10000) ]\n',
                           'data\n',
                           'data[ 9800 ]\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #32'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #33'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('unknown:<untitled> #34'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 1,
        'sel-line-start': 18,
        'selection_end': 18,
        'selection_start': 18},
                       loc('unknown:<untitled> #35'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #36'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #37'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #38'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #39'): {'attrib-starts': [],
        'first-line': 33,
        'history': {None: ['testData\n'],
                    u'file:E:/SWDEV/MindTree/DocumentWriter/ObjectText.py': [''\
        'STObject._text\n',
        'self.NAME_SEP\n',
        'self._text\n',
        'import sys\n',
        'sys.exc_info()\n',
        'Link_STObject.POPUP\n',
        'self._url\n',
        "Link_STObject.POPUP.entrycget(0,'label')\n",
        "Link_STObject.POPUP.entrycget(2,'label')\n",
        "Link_STObject.POPUP.entryconfig( 1, label='123' )\n",
        "Link_STObject.POPUP.entrycget(1,'label')\n",
        'Link_STObject.POPUP.entrycget()\n',
        'Link_STObject.POPUP.entryconfig()\n',
        'STObjectFactory.objectTypeLib\n',
        'type(ClassName )\n',
        'self\n',
        'self._objectLib\n'],
                    u'file:E:/SWDEV/MindTree/DocumentWriter/TextItem.py': [""\
        "self._parent.dump( '1.0', 'end' )\n",
        'import pprint\n',
        'self._tagName\n',
        "pprint.pprint( self._parent.dump( '1.0', 'end' ) )\n"],
                    u'file:E:/SWDEV/MindTree/FancyText.py': ['docData[0]\n',
        'le\n',
        'text.config()\n',
        'text.config().keys()\n',
        'self.makeFontTuple()\n',
        "x.cget( 'background' )\n",
        "self._styles[ 'underline' ]\n",
        'x = self._currentStyle.makeOptionDictionary()\n',
        'x\n',
        'self._stylesCombo\n',
        'self._stylesCombo.__dict__\n',
        'self._stylesCombo.subwidget_list\n',
        'self._stylesCombo.subwidgets_all\n',
        "self._stylesCombo.subwidget( 'listbox' )\n",
        'self._currentStyle\n',
        'styleName\n',
        "self._styles[ 'Old' ]\n",
        'self._currentStyleName.get()\n',
        'styleName.get()\n',
        'self._background.get()\n',
        'self._currentStyle._attributes\n',
        "self._styles[ 'old' ]._attributes\n",
        "self._styles[ 'Old' ]._attributes\n",
        "self._styles[ 'New' ]._attributes\n",
        'self._bgButton\n',
        "theStyle[ 'family' ]\n",
        "theStyle[ 'size' ]\n",
        'self._font.get()\n',
        'id(self._styles)\n',
        'id(self.DEFAULT_STYLE)\n',
        'id(styles)\n',
        'if styles:\n',
        "   print 'True'\n",
        'id(globalStyles)\n',
        'globalStyles\n',
        'self._underline\n',
        'self._underline.get()\n',
        "self._styles[ 'normal-bold' ]\n",
        'self._styles\n',
        "self._styles[ 'normal_bold' ]\n",
        "self._styles[ 'normal_bold' ]._attributes\n"],
                    u'file:E:/SWDEV/MindTree/MindTree.py': ['self._insertSty'\
        'leName\n',
        'self._styleLib[ self._insertStyleName ]\n',
        'results\n',
        'result\n',
        'os.listdir(pluginDir)\n',
        'self\n',
        'self._errWord\n',
        'self._errIndex\n',
        "rowValues.split(',')\n",
        'self._view\n',
        'self._currentStyleName.get()\n',
        'self._styleNameListWidget.get(0)\n',
        'theDump\n',
        'finalReport\n',
        'activeTags\n',
        'dump\n',
        'self._chkr.word\n',
        'self._chkr.wordpos\n',
        'self.config\n',
        'self.config()\n',
        "self.config( 'spacing1' )\n",
        "self[ 'spacing1' ]\n",
        'options\n',
        "self[ 'spacing2' ]\n",
        "self.effectiveStyling( 'insert' )\n",
        "self._styleLib[ 'default' ]\n",
        "self._styleLib[ 'default' ].tagOptions()\n",
        'Style.DEFAULT_STYLE\n',
        "self[ 'spacing3' ]\n",
        'Font.DEFAULT_FONT\n',
        'Font.DEFAULT_FONT.tagOptions()\n',
        "aTextWidget['spacing3']\n",
        'Style.DEFAULT_STYLE.tagOptions()\n',
        'articleFont\n',
        "self.index('end')\n",
        "self.index( '3.end' )\n",
        "self.dline_start( '3.84' )\n",
        'self.tag_names( index)\n',
        "self.tag_names( 'insert' )\n",
        "self.index('insert')\n",
        "self.index('insert +1 chars')\n",
        'self.tag_names( startIndex )\n',
        'event.keysym\n',
        'self._path\n',
        'self._path[ -1 ]\n',
        'self._entryWidget\n',
        'self._entryWidget[0]\n',
        "self._entryWidget['0']\n",
        "self._entryWidget['1']\n",
        "self._entryWidget['2']\n",
        "self._entryWidget['3']\n",
        'break\n',
        "self._treeView.hlist[ 'height' ]\n",
        'self._treeView.hlist.nearest( 100 )\n',
        'self._treeView.hlist.nearest( 200 )\n',
        'self._treeView.hlist.nearest( 4000 )\n',
        'self._treeView.hlist.nearest( 5000 )\n',
        'self._treeView.hlist.nearest( 8000 )\n',
        'self._treeView.hlist.nearest( -1 )\n',
        "self['height']\n",
        'self._treeView.winfo_height()\n',
        "self.index( '@20,600' )\n",
        'self._backupDirectory\n',
        "self.tag_ranges( 'sel' )\n",
        'len(self._treeEntry.article)\n',
        'theDoc\n',
        'theDoc[1]\n',
        'pprint( theDoc)\n',
        'aDocument[0]\n',
        'aDocument[1]\n',
        "self._styleLib['default']\n",
        "self.tag_config( 'default' )\n",
        'theNewFont.fontName()\n',
        'theNewFont.tagOptions()\n',
        'self._styleLib\n',
        'self._insertTags[0]\n',
        'newAttrib.tagOptions()\n',
        "self.tag_config( '_attribute_underline_false' )\n",
        'opts\n',
        'Font.getFont(name).opts()\n',
        'self._insertStyleString\n',
        'self._insertTags\n',
        'self.winfo_width()\n',
        'self.winfo_height()\n',
        "self.index( '@880,404' )\n",
        "self.index( '@880,400' )\n",
        "self.index( '@880,395' )\n",
        "self.bbox('10.15')\n",
        "self.index( 'end -1 chars' )\n",
        "self.dlineinfo( '4.0' )\n",
        "self.dlineinfo( '4.100' )\n",
        "self.dlineinfo( '4.120' )\n",
        'from pprint import pprint\n',
        'pprint(article)\n',
        "self.tag_config( '_style_default' )\n",
        'import sys\n',
        'sys.exc_info()\n',
        "self.tag_ranges( '_style_defauld' )\n",
        "self.tag_ranges( '_style_default' )\n",
        "self.tag_raise( '_style_Header 2', '_style_default' )\n"],
                    u'file:E:/SWDEV/MindTree/test3.py': ['tkMath.coordToPixe'\
        'ls(coord1)\n',
        'int(tkMath.coordToPixels(coord1))\n'],
                    u'file:E:/SWDEV/MindTree/test4.py': ["ord(';')\n",
        'ord(event.char)\n',
        'len(event.char)\n',
        '32 <= ord(event.char) <= 127\n'],
                    u'file:E:/SWDEV/MindTree/test6.py': ["cb['command']\n",
        "cb['command'] = None\n",
        'cb.config(command=None)\n',
        'cb.config(command=CB2)\n',
        "cb.config(command='none')\n",
        "cb.cget('command')\n"],
                    u'file:E:/SWDEV/MindTree4 - SingleDoc/MindTree.py': ['pl'\
        'ugin\n',
        'self._view\n',
        'self._model\n',
        'aModel\n',
        'parentNB\n',
        'parentNB.winfo_toplevel()\n',
        'aView\n',
        'self\n'],
                    u'file:E:/SWDEV/MindTree4/FancyText.py': ["self._text.ge"\
        "tStyleRegions( '1.0', Tk.END )\n",
        "self.text.index( '_bookmark_2' )\n",
        'activeStyles\n',
        'styleRangeList\n',
        "self._text.text.tag_remove( 'normal_bold', '1.0', '1.4' )\n"],
                    u'file:E:/SWDEV/Modules/FontChooser.py': ['self._showSty'\
        'les\n'],
                    u'file:F:/SWDEV/MindTree/MindTree.py': ['self.note\n',
        'self._stext\n',
        'self._stext.styles()\n',
        'style\n',
        'Style.DEFAULT_STYLE\n',
        'event.char\n',
        'self._selectionAnchor\n',
        'event\n'],
                    u'file:e:/SWDEV/MindTree4/FancyText.py': ['self._text.in'\
        'dex( Tk.SEL )\n',
        'self._text\n',
        'self._text.styleNames\n',
        'self._styles\n',
        'self._styles.keys()\n',
        'self._styles.keys().sort()\n',
        'self._selection\n',
        'self.selectedRegion()\n',
        "opts['font'].actual( )\n",
        'self.text.tag_cget( aStyleName )\n',
        "self.text.tag_cget( aStyleName, 'font' )\n",
        "self.text.tag_cget( 'normal-overstrike', 'font' )\n",
        "f = self.text.tag_cget( 'normal-overstrike', 'font' )\n",
        'f\n',
        'type(f)\n',
        'f = self.text.cget( )\n',
        'f = self.text.configure( )\n',
        'Font\n',
        "opts[ 'font' ]\n",
        "opts[ 'font' ].actual()\n",
        "self._text.text.tag_cget( 'normal-bold' )\n",
        "self.nametowidget( 'font18945408' )\n",
        "self._text.text.tag_cget( 'normal-bold', 'font' )\n",
        "Font.nametofont( 'font18945408' )\n",
        'Font.names()\n',
        'f = Font.Font()\n',
        'f.names()\n',
        "self._text.text.tag_config( 'normal-bold', font=Font( bold=True ) )"\
        "\n",
        "self._text.text.tag_config( 'normal-bold', font=Font.Font( bold=Tru"\
        "e ) )\n",
        "self._text.text.tag_config( 'normal-bold', font=Font.Font( weight=F"\
        "ont.BOLD ) )\n",
        "opts[ 'font'].actual()\n",
        'self.text.tag_names()\n',
        "self._text.text.dump( '1.0', Tk.END )\n"],
                    u'file:e:/SWDEV/MindTree4/MindTree.py': ['self.location\n',
        'locationStr()\n',
        'self.locationStr()\n'],
                    u'file:e:/SWDEV/MindTree4/Plugins/BonsaiXMLImporter/Translator.py': [''\
        'testData\n',
        'testData[73]\n',
        'line\n',
        'print line\n',
        'print unicode(line)\n',
        'unicode(line)\n',
        'self._suffixRegEx\n',
        'aString\n',
        'out\n']},
        'sel-line': 22,
        'sel-line-start': 3272,
        'selection_end': 3276,
        'selection_start': 3276},
                       loc('unknown:<untitled> #40'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['from ConfigParser import RawConfigParser\n',
                           'c = RawConfigParser( )\n',
                           "c.options( 'x' )\n",
                           "{ 'a':1 }.update( None )\n",
                           'from ConfigParser import *\n',
                           'c = ConfigParser( )\n',
                           "c.set( 'DEFAULT', 'x', '123' )\n",
                           "c.add_section( 'Y' )\n",
                           "c.set( 'Y', 'z', 'abc-%(x)s' )\n",
                           "c.set( 'DEFAULT', 'x', 'abc' )\n",
                           "c.get( 'Y', 'z' )\n",
                           'def deprecated( fn ):\n',
                           '   print "Warning:  %s has been deprecated." % f'\
                           'n.__name__\n',
                           '   return fn\n',
                           '@deprecated\n',
                           'def X(fn ):\n',
                           '   return X\n',
                           '@X\n',
                           'data = [ x for x in range(10000) ]\n',
                           'data\n',
                           'data[ 9800 ]\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #41'): {'attrib-starts': [],
        'first-line': 168,
        'history': {None: ['import Tkinter\n',
                           'asdfasdf\n',
                           'class X:\n',
                           '   def __init__( self ):\n',
                           "      self._v = { 'a':1, 'b':2, 'c':3, 'd':4, 'e"\
                           "':5 }\n",
                           '   def __getitem__( self, i1, i2 ):\n',
                           '      return ( self._v[i1], self._v[i2] )\n',
                           'x = X()\n',
                           "x[ 'a', 'd' ]\n",
                           "print x[ 'a', 'd' ]\n",
                           'from Tkinter impor *\n',
                           'from Tkinter import *\n',
                           'root = Tk()\n',
                           "button = Button( root, name='b', class='B' )\n",
                           'button = Button( root )\n',
                           "button = Button( root, name='b' )\n",
                           "button = Button( root, name='b', class_='B' )\n",
                           "button = Button( root, name='b', _class='B' )\n",
                           "canvas = Canvas( root, name='ca' )\n",
                           "canvas = Canvas( root, name='ca', class_='Ca' )\n",
                           "checkbutton = Checkbutton( root, name='ch' )\n",
                           "checkbutton = Checkbutton( root, name='ch', clas"\
                           "s_='CB' )\n",
                           "entry = Entry( root, name='En' )\n",
                           "entry = Entry( root, name='en' )\n",
                           "entry = Entry( root, name='en', class_='En' )\n",
                           "frame = Frame( root, name='fr' )\n",
                           "frame = Frame( root, name='fr', class_='Fr' )\n",
                           "label = Label( root, name='la' )\n",
                           'label.keys()\n',
                           'frame.keys()\n',
                           "labelframe=LabelFrame( root, name='lf' )\n",
                           "labelframe=LabelFrame( root, name='lf', class_='"\
                           "LF' )\n",
                           "listbox=Listbox( root, name='lb' )\n",
                           "listbox=Listbox( root, name='lb', class='LB' )\n",
                           "listbox=Listbox( root, name='lb', class_='LB' )\n",
                           "menu = Menu( root, name='mn' )\n",
                           "menu = Menu( root, name='mn', class_='Mn' )\n",
                           "menubutton = Menubutton( root, name='mb' )\n",
                           "menubutton = Menubutton( root, name='mb', class_"\
                           "='Mb' )\n",
                           "message = Message( root, name='me' )\n",
                           "message = Message( root, name='me', class_='Mb' "\
                           ")\n",
                           "optionmenu = OptionMenu( root, StringVar(), 'x',"\
                           " name='om' )\n",
                           "panedwindow=PanedWindow( root, name='pw' )\n",
                           "panedwindow=PanedWindow( root, name='pw', class_"\
                           "='Pw' )\n",
                           "radiobutton = Radiobutton( root, name='rb' )\n",
                           "radiobutton = Radiobutton( root, name='rb', clas"\
                           "s_='Rb' )\n",
                           "scale=Scale(root,name='sc' )\n",
                           "scale=Scale(root,name='sc',class='Sc' )\n",
                           "scale=Scale(root,name='sc',class_='Sc' )\n",
                           "scrollbar=Scrollbar(root, name='sb' )\n",
                           "scrollbar=Scrollbar(root, name='sb', class='Sb' "\
                           ")\n",
                           "scrollbar=Scrollbar(root, name='sb', class_='Sb'"\
                           " )\n",
                           "spinbox=Spinbox( root,name='sb')\n",
                           "spinbox=Spinbox( root,name='sb',class_='Sb')\n",
                           "text=Text(root,name='Te' )\n",
                           "text=Text(root,name='te' )\n",
                           "text=Text(root,name='te',class_='Te' )\n",
                           "toplevel=Toplevel(root,name='tl')\n",
                           "toplevel=Toplevel(root,name='tl',class_='tl')\n",
                           'button.pack()\n']},
        'sel-line': 198,
        'sel-line-start': 10323,
        'selection_end': 10327,
        'selection_start': 10327},
                       loc('unknown:<untitled> #42'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #43'): {'attrib-starts': [('E'\
        'ntity',
        9),
        ('Entity.getGeometry',
         10)],
        'first-line': 0,
        'sel-line': 12,
        'sel-line-start': 254,
        'selection_end': 254,
        'selection_start': 254},
                       loc('unknown:<untitled> #44'): {'attrib-starts': [],
        'first-line': 82,
        'history': {},
        'sel-line': 92,
        'sel-line-start': 4355,
        'selection_end': 4355,
        'selection_start': 4355},
                       loc('unknown:<untitled> #45'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 6,
        'selection_start': 6},
                       loc('unknown:<untitled> #46'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #47'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #48'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #49'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #50'): {'attrib-starts': [('D'\
        'ump_TextItem',
        10),
        ('Dump_TextItem.__init__',
         11)],
        'first-line': 0,
        'sel-line': 13,
        'sel-line-start': 222,
        'selection_end': 222,
        'selection_start': 222},
                       loc('unknown:<untitled> #51'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #52'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('unknown:<untitled> #53'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 6,
        'sel-line-start': 177,
        'selection_end': 177,
        'selection_start': 177},
                       loc('unknown:<untitled> #54'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['testData\n'],
                    u'file:E:/SWDEV/MindTree/FancyText.py': ['docData[0]\n',
        'le\n',
        'text.config()\n',
        'text.config().keys()\n',
        'self.makeFontTuple()\n',
        "x.cget( 'background' )\n",
        "self._styles[ 'underline' ]\n",
        'x = self._currentStyle.makeOptionDictionary()\n',
        'x\n',
        'self._stylesCombo\n',
        'self._stylesCombo.__dict__\n',
        'self._stylesCombo.subwidget_list\n',
        'self._stylesCombo.subwidgets_all\n',
        "self._stylesCombo.subwidget( 'listbox' )\n",
        'self._currentStyle\n',
        'styleName\n',
        "self._styles[ 'Old' ]\n",
        'self._currentStyleName.get()\n',
        'styleName.get()\n',
        'self._background.get()\n',
        'self._currentStyle._attributes\n',
        "self._styles[ 'old' ]._attributes\n",
        "self._styles[ 'Old' ]._attributes\n",
        "self._styles[ 'New' ]._attributes\n",
        'self._bgButton\n',
        "theStyle[ 'family' ]\n",
        "theStyle[ 'size' ]\n",
        'self._font.get()\n',
        'id(self._styles)\n',
        'id(self.DEFAULT_STYLE)\n',
        'id(styles)\n',
        'if styles:\n',
        "   print 'True'\n",
        'id(globalStyles)\n',
        'globalStyles\n',
        'self._underline\n',
        'self._underline.get()\n',
        "self._styles[ 'normal-bold' ]\n",
        'self._styles\n',
        "self._styles[ 'normal_bold' ]\n",
        "self._styles[ 'normal_bold' ]._attributes\n"],
                    u'file:E:/SWDEV/MindTree/MindTree.py': ["event.widget.ta"\
        "g_add( 'sel', '4.5', '6.20' )\n",
        "event.widget.tag_add( 'sel', '8.5', '10.20' )\n",
        "event.widget.index('anchor')\n",
        "widget.tag_names( 'sel.first' )\n",
        "widget.index('sel.anchor')\n",
        "widget.index( 'sel.anchor' )\n",
        "widget.index( 'current' )\n",
        "self.index('sel.first')\n",
        "opts['font']\n",
        "styleOpts['font']\n",
        'self._styles[0]\n',
        'self._styles[styles[0]]\n',
        'self\n',
        'Style.DEFAULT_STYLE\n',
        'x = copy.deepcopy(Style.DEFAULT_STYLE)\n',
        'x\n',
        'type(x)\n',
        'Font.TAG_NAME_FORMAT\n',
        "opts['family']\n",
        'str(opts)\n',
        'repr(opts)\n',
        'dict(opts)\n',
        'dict.__str__( opts )\n',
        'self._font._fontOpts\n',
        'self._font.fontOptions()\n',
        'self._currentFontSize.get()\n',
        "opts['size']\n",
        'type(opts)\n',
        'opts.styleOptions()\n',
        'tagOpts\n',
        'styles\n',
        'fontOpts\n',
        'type(fontOpts)\n',
        'f = Font(fontOpts)\n',
        'f\n',
        "styleOpts['bold']\n",
        'styleOpts.keys()\n',
        'DEFAULT_STYLE.styleOptions()\n',
        'self.mapRegion(index1,index2)\n',
        'self.makeStyleObj()\n',
        'self._removeToolbarUpdating()\n',
        "self.after_cancel( 'after#0' )\n",
        'self._callbackId\n',
        "self.tag_delete('sel')\n",
        "self.tag_remove('sel', index1, index2 )\n",
        'self.dump(index1,index2,tag=True)\n',
        "opts['slant']\n",
        "opts['italic']\n",
        "widget.subwidget('arrow')\n",
        "widget.subwidget('arrow').config( state=newState )\n",
        "self.index('insert')\n",
        'self._currentFontSlant.get()\n',
        "self.bbox('insert')\n",
        "self.index( '@1,1' )\n",
        "self.bbox('7.0')\n",
        "self.bbox('1.0')\n",
        "self.bbox('1.1')\n",
        'style.opts()\n',
        'theNewFont.opts()\n',
        'self._insertStyle\n',
        'newAttrib.tagOptions()\n',
        "opts['overstrike']\n",
        "bool(opts['overstrike'])\n",
        "opts['foreground']\n",
        'opts\n',
        "opts['bold']\n",
        'theNewFont.fontName()\n',
        'theNewFont.tagOptions()\n',
        'return\n',
        'theStyle.tagOptions()\n',
        'self._styles[StyleEditor.SAMPLE_TAG]._font\n',
        'self._styles[StyleEditor.SAMPLE_TAG]._font.opts()\n',
        'self._styleLib\n',
        'self._styleLib.keys()\n',
        "self._styleLib['sampleTag'].tagOptions()\n",
        'Font.DEFAULT_FONT\n',
        'Font.DEFAULT_FONT.opts()\n',
        'self._italic.get()\n',
        'self._styles[StyleEditor.SAMPLE_TAG]\n',
        'self._styles[StyleEditor.SAMPLE_TAG].opts()\n',
        "self._styleLib['sampleTag']\n",
        "self._styleLib['sampleTag'].opts()\n",
        'theStyle.opts()\n',
        'self._styleOpts\n',
        'self._font.opts()\n',
        'self.get()\n',
        'Text.get(self)\n',
        'EnhancedText.get()\n',
        'EnhancedText.get(self)\n',
        "EnhancedText.get(self,'1.0')\n",
        'self._insertTags\n',
        'p\n',
        'type(p)\n',
        "p.find( 'Enhanced' )\n",
        'theDump\n',
        'self._font\n',
        'self._insertStyleName\n',
        'self._styleLib[ self._insertStyleName ]\n',
        'results\n',
        'result\n'],
                    u'file:E:/SWDEV/MindTree/test3.py': ['tkMath.coordToPixe'\
        'ls(coord1)\n',
        'int(tkMath.coordToPixels(coord1))\n'],
                    u'file:E:/SWDEV/MindTree/test4.py': ["ord(';')\n",
        'ord(event.char)\n',
        'len(event.char)\n',
        '32 <= ord(event.char) <= 127\n'],
                    u'file:E:/SWDEV/MindTree/test6.py': ["cb['command']\n",
        "cb['command'] = None\n",
        'cb.config(command=None)\n',
        'cb.config(command=CB2)\n',
        "cb.config(command='none')\n",
        "cb.cget('command')\n"],
                    u'file:E:/SWDEV/MindTree4 - SingleDoc/MindTree.py': ['pl'\
        'ugin\n',
        'self._view\n',
        'self._model\n',
        'aModel\n',
        'parentNB\n',
        'parentNB.winfo_toplevel()\n',
        'aView\n',
        'self\n'],
                    u'file:E:/SWDEV/MindTree4/FancyText.py': ["self._text.ge"\
        "tStyleRegions( '1.0', Tk.END )\n",
        "self.text.index( '_bookmark_2' )\n",
        'activeStyles\n',
        'styleRangeList\n',
        "self._text.text.tag_remove( 'normal_bold', '1.0', '1.4' )\n"],
                    u'file:E:/SWDEV/Modules/FontChooser.py': ['self._showSty'\
        'les\n'],
                    u'file:F:/SWDEV/MindTree/MindTree.py': ['self.note\n',
        'self._stext\n',
        'self._stext.styles()\n',
        'style\n',
        'Style.DEFAULT_STYLE\n',
        'event.char\n',
        'self._selectionAnchor\n',
        'event\n'],
                    u'file:e:/SWDEV/MindTree4/FancyText.py': ['self._text.in'\
        'dex( Tk.SEL )\n',
        'self._text\n',
        'self._text.styleNames\n',
        'self._styles\n',
        'self._styles.keys()\n',
        'self._styles.keys().sort()\n',
        'self._selection\n',
        'self.selectedRegion()\n',
        "opts['font'].actual( )\n",
        'self.text.tag_cget( aStyleName )\n',
        "self.text.tag_cget( aStyleName, 'font' )\n",
        "self.text.tag_cget( 'normal-overstrike', 'font' )\n",
        "f = self.text.tag_cget( 'normal-overstrike', 'font' )\n",
        'f\n',
        'type(f)\n',
        'f = self.text.cget( )\n',
        'f = self.text.configure( )\n',
        'Font\n',
        "opts[ 'font' ]\n",
        "opts[ 'font' ].actual()\n",
        "self._text.text.tag_cget( 'normal-bold' )\n",
        "self.nametowidget( 'font18945408' )\n",
        "self._text.text.tag_cget( 'normal-bold', 'font' )\n",
        "Font.nametofont( 'font18945408' )\n",
        'Font.names()\n',
        'f = Font.Font()\n',
        'f.names()\n',
        "self._text.text.tag_config( 'normal-bold', font=Font( bold=True ) )"\
        "\n",
        "self._text.text.tag_config( 'normal-bold', font=Font.Font( bold=Tru"\
        "e ) )\n",
        "self._text.text.tag_config( 'normal-bold', font=Font.Font( weight=F"\
        "ont.BOLD ) )\n",
        "opts[ 'font'].actual()\n",
        'self.text.tag_names()\n',
        "self._text.text.dump( '1.0', Tk.END )\n"],
                    u'file:e:/SWDEV/MindTree4/MindTree.py': ['self.location\n',
        'locationStr()\n',
        'self.locationStr()\n'],
                    u'file:e:/SWDEV/MindTree4/Plugins/BonsaiXMLImporter/Translator.py': [''\
        'testData\n',
        'testData[73]\n',
        'line\n',
        'print line\n',
        'print unicode(line)\n',
        'unicode(line)\n',
        'self._suffixRegEx\n',
        'aString\n',
        'out\n']},
        'sel-line': 6,
        'sel-line-start': 216,
        'selection_end': 220,
        'selection_start': 220},
                       loc('unknown:<untitled> #55'): {'attrib-starts': [],
        'first-line': 0,
        'history': {u'file:E:/SWDEV/Modules/FontChooser.py': ['self.result\n',
        'self._weight.get()\n']},
        'sel-line': 5,
        'sel-line-start': 95,
        'selection_end': 105,
        'selection_start': 105},
                       loc('unknown:<untitled> #56'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['import Tkinter\n',
                           'asdfasdf\n',
                           "d = { 1:'a', 2:'b' }\n",
                           's = d[3]\n',
                           "fn = '-font-ariel-12-bold_italic'\n",
                           'fn1 = fn[6:]\n',
                           "fn1 = fn1.replace( '_', ' ' )\n",
                           'fn1\n',
                           "fontTuple = fn1.split( '-' )\n",
                           'fontTuple\n',
                           't\n',
                           'text\n',
                           'from Tkinter import *\n',
                           'root = Tk()\n',
                           't = Text( root )\n',
                           "t.insert( '1.0', '01234567890\n",
                           "' )\n",
                           "t.insert( '1.0', '01234567890' )\n",
                           "t.tag_add( 'x', '1.1', '1.4' )\n",
                           "t.dump( '1.2', END )\n",
                           "t.dump( '1.2', END, tag=True )\n",
                           "' '.join( [ ] )\n",
                           "bool('')\n",
                           "bool('x')\n",
                           "bool('0')\n"]},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #57'): {'attrib-starts': [('W'\
        'idget',
        38),
        ('Widget.update',
         42)],
        'first-line': 0,
        'sel-line': 45,
        'sel-line-start': 1314,
        'selection_end': 1317,
        'selection_start': 1317},
                       loc('unknown:<untitled> #58'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #59'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 31,
        'sel-line-start': 1458,
        'selection_end': 1458,
        'selection_start': 1458},
                       loc('unknown:<untitled> #60'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #61'): {'attrib-starts': [],
        'first-line': 3,
        'history': {},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #62'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #63'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #64'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #65'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 55,
        'selection_start': 0},
                       loc('unknown:<untitled> #66'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #67'): {'attrib-starts': [('T'\
        'able',
        3),
        ('Table.recordNumber',
         20)],
        'first-line': 0,
        'folded-linenos': [24,
                           77,
                           99,
                           148,
                           165,
                           182,
                           185,
                           188,
                           195,
                           201,
                           233,
                           257,
                           264,
                           271],
        'sel-line': 21,
        'sel-line-start': 445,
        'selection_end': 455,
        'selection_start': 455},
                       loc('unknown:<untitled> #68'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['import Tkinter\n',
                           'asdfasdf\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #69'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ["font = Font( font=\"Ariel 10 bold italic\", name"\
                           "='x' )\n",
                           "font2 = Font( name='x' )\n",
                           "font2 = Font( name='x', exists=True )\n",
                           'font2.actual()\n',
                           "font3 = Font( font='Times 6' )\n",
                           "font3.config( name='y' )\n",
                           "font3 = Font( font='x' )\n",
                           'font3.actual()\n',
                           "font4 = Font( font='z' )\n",
                           'font4.actua()\n',
                           'font4.actual()\n',
                           "font4 = Font( font='z', exists=False )\n",
                           "font4 = Font( font='z', exists=True )\n",
                           "font5 = Font( font='abc', exists=False )\n",
                           "font5 = Font( font='xyz', exists=True )\n",
                           '[1,2,3,4][:1]\n',
                           "sbtn = Studbutton( root, text='stud' )\n",
                           'opts\n',
                           'v1 = BooleanVar( )\n',
                           'v1.set( True )\n',
                           "v1.set( 'true' )\n",
                           'v1.set( 1 )\n',
                           'v1.get()\n',
                           'bool(1)\n',
                           'boolean(1)\n',
                           'type(True)\n',
                           'for x in [ 1, 2, 3, 4, 5 ]:\n',
                           'l = [ 0, 1, 2, 3, 4, 5 ]\n',
                           'for x in l:\n',
                           '   l.remove( 2 )\n',
                           'l.remove( 5)\n',
                           'l\n',
                           'class A:\n',
                           'class B:\n',
                           'class B(A):\n',
                           '   pass\n',
                           'b = B()\n',
                           'isinstance( b, A )\n',
                           "int('0x00AC')\n",
                           "int('0x00AC',0)\n",
                           'int( 10, 5 )\n',
                           'def cvtBase( val ):\n',
                           '   while val >=\n',
                           '   places = [ ]\n',
                           '   while val >= base:\n',
                           '      places.append( val % base )\n',
                           '      val = val / base\n',
                           '   places.append( val )\n',
                           '   return places\n',
                           'def cvtBase( val, base ):\n',
                           'cvtBase( 10, 8 )\n',
                           'x = [ 1, 2, 3 ]\n',
                           'x.reverse()\n',
                           'chr(65)\n',
                           "'-%s-%s' % 'one'\n",
                           "'-%s-\\%s' % 'one'\n",
                           "'-%s-\\%\\s' % 'one'\n",
                           "'-%s-%%s' % 'one'\n",
                           'text = Text(root)\n',
                           'text.config()\n',
                           'from pprint import pprint\n',
                           'pprint( text.config() )\n',
                           "text['font']\n",
                           "text.cget('font')\n",
                           "text.tag_add( 'x', '1.0', 'end' )\n",
                           "text.tag_config( 'x' )\n",
                           "pprint( text.tag_config( 'x' ) )\n",
                           "text.tag_config( 'y', foreground='blue' )\n",
                           "text.tag_config( 'y', **{ } )\n",
                           'x = [ 0, 1, 2, 3 ]\n',
                           'x.pop(0)\n',
                           "bool('False')\n",
                           "s = 'one two three'\n",
                           "del s['two']\n",
                           "text.tag_add( 'x', underline=True )\n",
                           "text.tag_config( 'y n', font=\"Ariel 16\" )\n",
                           "text.insert( 'hello world!', ( 'x', 'y n' ) )\n",
                           "text.insert( 'end', 'hello world!', ( 'x', 'y n'"\
                           " ) )\n",
                           'text.pack()\n',
                           'from tkFont import *\n',
                           "f = Font( font=[ 'Lucida Sans Unicode', 12, 'ita"\
                           "lic' ] )\n",
                           "f = Font( font=( 'Lucida Sans Unicode', 12, 'ita"\
                           "lic' ) )\n",
                           "f = Font( name='f1', font='Ariel 20 bold' )\n",
                           "b = Button( root, font='f1', text=\"Hello World\""\
                           " )\n",
                           'b.pack()\n',
                           'root.mainloop()\n',
                           'self._insertTags\n',
                           '(None,)\n',
                           "x = ['default', None, 'one', 'two' ]\n",
                           'x.remove( None )\n',
                           'x\n',
                           'x = { 1:1, 2:2 }\n',
                           'x[None]\n',
                           'from Tkinter import *\n',
                           'root = Tk()\n',
                           'text = Text( root )\n',
                           "text.tag_config( 'x', underline=True )\n",
                           "text.tag_config( 'y', overstrike=True )\n",
                           "text.tag_add( 'y', '1.0', 'end' )\n",
                           "text.tag_raise( 'y', 'x' )\n"]},
        'sel-line': 9,
        'sel-line-start': 370,
        'selection_end': 374,
        'selection_start': 374},
                       loc('unknown:<untitled> #70'): {'attrib-starts': [('D'\
        'ocEditor',
        0),
        ('DocEditor.__init__',
         3)],
        'first-line': 0,
        'sel-line': 5,
        'sel-line-start': 149,
        'selection_end': 149,
        'selection_start': 149},
                       loc('unknown:<untitled> #71'): {'attrib-starts': [],
        'first-line': 28,
        'sel-line': 36,
        'sel-line-start': 1342,
        'selection_end': 1342,
        'selection_start': 1342},
                       loc('unknown:<untitled> #72'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #73'): {'attrib-starts': [('D'\
        'ocumentElement',
        0),
        ('DocumentElement.__init__',
         1)],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 60,
        'selection_end': 66,
        'selection_start': 66},
                       loc('unknown:<untitled> #74'): {'attrib-starts': [('P'\
        'roxyRouter',
        0),
        ('ProxyRouter.__getitem__',
         10)],
        'first-line': 0,
        'sel-line': 12,
        'sel-line-start': 367,
        'selection_end': 397,
        'selection_start': 397},
                       loc('unknown:<untitled> #75'): {'attrib-starts': [('F'\
        'latTreeEntry',
        0)],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #76'): {'first-line': 0,
        'selection_end': 2359,
        'selection_start': 0},
                       loc('unknown:<untitled> #77'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #78'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #79'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 1,
        'sel-line-start': 35,
        'selection_end': 35,
        'selection_start': 35},
                       loc('unknown:<untitled> #80'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #81'): {'first-line': 0,
        'selection_end': 54,
        'selection_start': 54},
                       loc('unknown:<untitled> #82'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #83'): {'first-line': 0,
        'selection_end': 2636,
        'selection_start': 2636},
                       loc('unknown:<untitled> #84'): {'attrib-starts': [('S'\
        'ingleDocumentApplication',
        18),
        ('SingleDocumentApplication.openDocument',
         34)],
        'first-line': 0,
        'sel-line': 37,
        'sel-line-start': 1225,
        'selection_end': 1225,
        'selection_start': 1225},
                       loc('unknown:<untitled> #85'): {'first-line': 0,
        'selection_end': 291,
        'selection_start': 291},
                       loc('unknown:<untitled> #86'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #87'): {'attrib-starts': [('W'\
        'idgetTester',
        27),
        ('WidgetTester.run',
         40)],
        'first-line': 3,
        'sel-line': 47,
        'sel-line-start': 1335,
        'selection_end': 1335,
        'selection_start': 1335},
                       loc('unknown:<untitled> #88'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['from ConfigParser import RawConfigParser\n',
                           'c = RawConfigParser( )\n',
                           "c.options( 'x' )\n",
                           "{ 'a':1 }.update( None )\n",
                           'from ConfigParser import *\n',
                           'c = ConfigParser( )\n',
                           "c.set( 'DEFAULT', 'x', '123' )\n",
                           "c.add_section( 'Y' )\n",
                           "c.set( 'Y', 'z', 'abc-%(x)s' )\n",
                           "c.set( 'DEFAULT', 'x', 'abc' )\n",
                           "c.get( 'Y', 'z' )\n",
                           'def deprecated( fn ):\n',
                           '   print "Warning:  %s has been deprecated." % f'\
                           'n.__name__\n',
                           '   return fn\n',
                           '@deprecated\n',
                           'def X(fn ):\n',
                           '   return X\n',
                           '@X\n',
                           'data = [ x for x in range(10000) ]\n',
                           'data\n',
                           'data[ 9800 ]\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #89'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #90'): {'attrib-starts': [],
        'first-line': 0,
        'history': {u'file:E:/SWDEV/MindTree/experiment NewText/FancyText.py': [''\
        'StyleEditor.DEFAULT_STYLE\n',
        'StyleEditor.DEFAULT_STYLE._attributes\n',
        'StyleEditor.DEFAULT_STYLE.iteritems()\n',
        'for field,value in StyleEditor.DEFAULT_STYLE.iteritems():\n',
        "   print field, ': ', value\n",
        "self.text.index( 'sel.first' ]\n",
        "self.text.index( 'sel.first' )\n",
        'name\n',
        'fontTuple\n',
        'value\n',
        "self.text['font']\n",
        'self._defaultAttribs\n',
        'fontOpts\n',
        'self._defaultFontFamily\n',
        'fontSpec[21]\n',
        'fontSpec[fontFamilyStringEnd+1:theSplit]\n',
        'fontSpec[fontFamilyStringEnd]\n',
        'fontSpec[fontFamilyStringEnd+1]\n',
        'theSplit\n',
        'fontOptions\n',
        'fontStyleList\n',
        'options.keys()\n',
        "options[ 'underline' ]\n",
        "opts['underline' ]\n",
        "self.mapRegion( '1.5', '1.11' )\n",
        "self.mapRegion('1.2', '1.9' )\n",
        'finalReport\n',
        'theDump\n',
        'opts\n',
        'options\n',
        "options['font']\n",
        'self.mapRegion(index1, index2)\n',
        'aSpec\n',
        'tagName\n',
        'self.styler._styles[ tagName ]\n',
        'self.styler._styles.keys()\n',
        'self._styles\n',
        'self._styles.keys()\n'],
                    u'file:E:/SWDEV/MindTree/experiment NewText/StyledEditor.py': [''\
        'self._currentStylerFont._fontOpts\n',
        "self._styler._styles[ 'Header 1' ]\n",
        "self._styler._styles[ 'Header 1' ]['font']\n",
        "self._styler._styles[ 'Header 1' ]['font']._fontOpts\n",
        'self._currentStyleName\n',
        'self._currentStyleName.get()\n',
        'self._currentStylerFont\n',
        "theStyle['font']._fontOpts\n",
        "self._currentStylerFont['family']\n",
        'self._fontFamily.get()\n',
        'self._fontSize.get()\n',
        "self._currentStylerFont['size']\n",
        'docData\n',
        'docData.keys()\n',
        'id(self.styler)\n',
        'styles\n',
        'id(styles)\n',
        'id(self._styler._styles)\n',
        'self._styles\n',
        'self._styles.keys()\n',
        'id(self._styles)\n',
        'self.styler\n',
        'id(self.styler._styles)\n',
        'self.styler._styles\n'],
                    u'file:F:/SWDEV/MindTree/experiment NewText/FancyText.py': [''\
        'oldFontOpts\n',
        'self._styles[ styleName ]\n',
        'options\n',
        'attribStyleName\n',
        "attribStyleName.split( '-')\n",
        'currentFont._fontOpts\n',
        "self.text['font']\n",
        'self._fontOpts\n',
        'self.winfo_toplevel()\n',
        'self\n',
        'parent\n',
        'parent.winfo_toplevel()\n',
        'self._underline\n',
        'self._underline.get()\n',
        "theStyle['bold']\n",
        "theStyle['italic']\n",
        "theStyle['underline']\n",
        "theStyle['overstrike']\n",
        'self._currentStylerFont.tagOptions()\n',
        'isinstance( aStyle, Style )\n',
        'self._currentStylerFont\n',
        'self._fgstipple.get()\n',
        'self._state\n'],
                    u'file:F:/SWDEV/MindTree/experiment NewText/FontChooser.py': [''\
        'self._showStyles\n'],
                    u'file:e:/SWDEV/MindTree/experiment NewText/FancyText.py': [""\
        "self.text[ 'font' ]\n",
        'theDump\n',
        'self.text.tag_names( index1 )\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #91'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #92'): {'attrib-starts': [],
        'first-line': 8,
        'sel-line': 17,
        'sel-line-start': 949,
        'selection_end': 949,
        'selection_start': 949},
                       loc('unknown:<untitled> #93'): {'attrib-starts': [],
        'first-line': 0,
        'history': {u'file:e:/SWDEV/MindTree/experiment NewText/FancyText.py': [""\
        "self.text[ 'font' ]\n",
        'theDump\n',
        'self.text.tag_names( index1 )\n']},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #94'): {'first-line': 4,
        'selection_end': 1917,
        'selection_start': 0},
                       loc('unknown:<untitled> #95'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #96'): {'attrib-starts': [('O'\
        'utlineEntry',
        0),
        ('OutlineEntry.__init__',
         1)],
        'first-line': 0,
        'sel-line': 4,
        'sel-line-start': 113,
        'selection_end': 119,
        'selection_start': 119},
                       loc('unknown:<untitled> #97'): {'first-line': 0,
        'selection_end': 382,
        'selection_start': 382},
                       loc('unknown:<untitled> #98'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['from ConfigParser import RawConfigParser\n',
                           'c = RawConfigParser( )\n',
                           "c.options( 'x' )\n",
                           "{ 'a':1 }.update( None )\n",
                           'from ConfigParser import *\n',
                           'c = ConfigParser( )\n',
                           "c.set( 'DEFAULT', 'x', '123' )\n",
                           "c.add_section( 'Y' )\n",
                           "c.set( 'Y', 'z', 'abc-%(x)s' )\n",
                           "c.set( 'DEFAULT', 'x', 'abc' )\n",
                           "c.get( 'Y', 'z' )\n",
                           'def deprecated( fn ):\n',
                           '   print "Warning:  %s has been deprecated." % f'\
                           'n.__name__\n',
                           '   return fn\n',
                           '@deprecated\n',
                           'def X(fn ):\n',
                           '   return X\n',
                           '@X\n',
                           'data = [ x for x in range(10000) ]\n',
                           'data\n',
                           'data[ 9800 ]\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #99'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #100'): {'attrib-starts': [],
        'first-line': 46,
        'sel-line': 29,
        'sel-line-start': 2347,
        'selection_end': 2347,
        'selection_start': 2347},
                       loc('unknown:<untitled> #101'): {'attrib-starts': [],
        'first-line': 0,
        'history': {None: ['import Tkinter\n',
                           'asdfasdf\n',
                           "d = { 1:'a', 2:'b' }\n",
                           's = d[3]\n',
                           "fn = '-font-ariel-12-bold_italic'\n",
                           'fn1 = fn[6:]\n',
                           "fn1 = fn1.replace( '_', ' ' )\n",
                           'fn1\n',
                           "fontTuple = fn1.split( '-' )\n",
                           'fontTuple\n',
                           't\n',
                           'text\n',
                           't = Text( root )\n',
                           "t.insert( '1.0', '01234567890\n",
                           "' )\n",
                           "t.insert( '1.0', '01234567890' )\n",
                           "t.tag_add( 'x', '1.1', '1.4' )\n",
                           "t.dump( '1.2', END )\n",
                           "t.dump( '1.2', END, tag=True )\n",
                           "' '.join( [ ] )\n",
                           "bool('')\n",
                           "bool('x')\n",
                           "bool('0')\n",
                           "text.tag_add( 'newTag', INSERT, END )\n",
                           "text.tag_config( 'newTag', underline=True )\n",
                           "Button( root, text='Hello There', font=('Ariel',"\
                           "12,'normal roman bold') ).pack()\n",
                           'int(4)\n',
                           'text = Text( root )\n',
                           'text.pack()\n',
                           "text.insert( '1.0', 'something to work with' )\n",
                           "text.tag_add( 'one', '1.3', 1.9' )\n",
                           "text.tag_add( 'one', '1.3', '1.9' )\n",
                           "text.tag_config( 'one', 'relief', 'groove' )\n",
                           "text.tag_config( 'one', relief='groove' )\n",
                           "text.tag_config( 'one', borderwidth=3 )\n",
                           'text = Text(root)\n',
                           "text[ 'font' ]\n",
                           'None in [3]\n',
                           'None in (3,)\n',
                           'from Tkinter import *\n',
                           "t.insert( Tk.END, '01234567890123456789' )\n",
                           "t.tag_config( fgstipple='gray50' )\n",
                           'root = Tk()\n',
                           't = Text(root)\n',
                           "t.insert( END, '01234567890123456789' )\n",
                           "t.tag_add( 'x', '1.4', '1.12')\n",
                           "t.tag_config( 'x', fgstipple='gray50' )\n",
                           't.pack( )\n',
                           'root.mainloop()\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #102'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #16'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 9,
        'selection_start': 9},
                       loc('unknown:<untitled> #17'): {'attrib-starts': [('C'\
        'ontroller',
        0),
        ('Controller.__init__',
         1)],
        'first-line': 0,
        'sel-line': 2,
        'sel-line-start': 55,
        'selection_end': 77,
        'selection_start': 77},
                       loc('unknown:<untitled> #18'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #19'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('unknown:<untitled> #20'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #21'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #22'): {'attrib-starts': [],
        'first-line': 75,
        'sel-line': 66,
        'sel-line-start': 3265,
        'selection_end': 3269,
        'selection_start': 3269},
                       loc('unknown:<untitled> #23'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #24'): {'attrib-starts': [],
        'first-line': 0,
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:untitled-1.py'): {'attrib-starts': [('Ta'\
        'ble',
        14)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 320,
        'selection_end': 320,
        'selection_start': 320},
                       loc('unknown:<untitled> #12'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #13'): {'attrib-starts': [('O'\
        'utline',
        7),
        ('Outline.__init__',
         8)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 465,
        'selection_end': 465,
        'selection_start': 465},
                       loc('unknown:<untitled> #14'): {'attrib-starts': [('S'\
        'tyledTextOutlineContent',
        4),
        ('StyledTextOutlineContent.__init__',
         5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 176,
        'selection_end': 176,
        'selection_start': 176},
                       loc('unknown:<untitled> #103'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #104'): {'attrib-starts': [(''\
        'Application',
        50),
        ('Application.__init__',
         51)],
        'first-line': 0,
        'sel-line': 52,
        'sel-line-start': 1262,
        'selection_end': 1262,
        'selection_start': 1262},
                       loc('unknown:<untitled> #105'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #106'): {'attrib-starts': [(''\
        'Setting',
        36)],
        'first-line': 0,
        'sel-line': 39,
        'sel-line-start': 444,
        'selection_end': 444,
        'selection_start': 444},
                       loc('unknown:<untitled> #107'): {'attrib-starts': [],
        'first-line': 0,
        'history': {},
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0}}
proj.env-vars = {None: ('default',
                        ['']),
                 loc('../Documents and Settings/ProvostRH/Desktop/HTML2Text.py'): (''\
        'project',
        ['']),
                 loc('../Documents and Settings/ProvostRH/Desktop/HTML2Text_rhp.py'): (''\
        'project',
        ['']),
                 loc('../Documents and Settings/ProvostRH/Desktop/ScrolledTable.py'): (''\
        'project',
        ['']),
                 loc('../Documents and Settings/ProvostRH/Desktop/grid.py'): (''\
        'project',
        ['']),
                 loc('../Documents and Settings/ProvostRH/Desktop/test.py'): (''\
        'project',
        ['']),
                 loc('../Modules/FontChooser.py'): ('project',
        ['']),
                 loc('../Python24/Lib/lib-tk/Tkdnd.py'): ('project',
        ['']),
                 loc('../Python24/Lib/lib-tk/Tkinter.py'): ('project',
        ['']),
                 loc('../Python25/Lib/lib-tk/tkFont.py'): ('project',
        ['']),
                 loc('../textTest.py'): ('project',
        ['']),
                 loc('BonsaiXMLArchiver.py'): ('project',
        ['']),
                 loc('DocEditingApp.py'): ('project',
        ['']),
                 loc('DocumentWriter/DocumentWriter.py'): ('project',
        ['']),
                 loc('DocumentWriter/EnhancedText.py'): ('project',
        ['']),
                 loc('DocumentWriter/ObjectText.py'): ('project',
        ['']),
                 loc('DocumentWriter/StyledText.py'): ('project',
        ['']),
                 loc('DocumentWriter/TextItem.py'): ('project',
        ['']),
                 loc('EnhancedText.py'): ('project',
        ['']),
                 loc('FancyText.py'): ('project',
                                       ['']),
                 loc('MindTree.ini'): ('project',
                                       ['']),
                 loc('MindTree.py'): ('project',
                                      ['']),
                 loc('MindTree.pyw'): ('project',
                                       ['']),
                 loc('Outline.py'): ('project',
                                     ['']),
                 loc('Plugin.py'): ('project',
                                    ['']),
                 loc('PluginFramework.py'): ('project',
        ['']),
                 loc('Plugins/BonsaiXMLImporter/Translator.py'): ('project',
        ['']),
                 loc('StyledText.py'): ('project',
        ['']),
                 loc('TkTools.py'): ('project',
                                     ['']),
                 loc('TkTools/TkTools.py'): ('project',
        ['']),
                 loc('Tree.py'): ('project',
                                  ['']),
                 loc('TreeEditor.py'): ('project',
        ['']),
                 loc('UnitTests/EnhancedTextUnitTests.py'): ('project',
        ['']),
                 loc('UnitTests/TreeUnitTests.py'): ('project',
        ['']),
                 loc('cbTest.py'): ('project',
                                    ['']),
                 loc('resTest.py'): ('project',
                                     ['']),
                 loc('resources.py'): ('project',
                                       ['']),
                 loc('test.py'): ('project',
                                  ['']),
                 loc('test1.py'): ('project',
                                   ['']),
                 loc('test2.py'): ('project',
                                   ['']),
                 loc('test3.py'): ('project',
                                   ['']),
                 loc('test4.py'): ('project',
                                   ['']),
                 loc('test5.py'): ('project',
                                   ['']),
                 loc('test6.py'): ('project',
                                   ['']),
                 loc('text.py'): ('project',
                                  ['']),
                 loc('unknown:<untitled> #108'): ('project',
        ['']),
                 loc('unknown:<untitled> #109'): ('project',
        ['']),
                 loc('unknown:<untitled> #110'): ('project',
        ['']),
                 loc('unknown:<untitled> #111'): ('project',
        ['']),
                 loc('unknown:<untitled> #112'): ('project',
        ['']),
                 loc('unknown:<untitled> #113'): ('project',
        [''])}
proj.pyexec = {None: ('custom',
                      'c:\\Python26\\python.exe')}
proj.pypath = {None: ('custom',
                      'c:\\python26')}
proj.revision-control = True
proj.revision-control-system = u'svn'
search.replace-history = [u'anchor',
                          u'.title',
                          u'.article',
                          u"'default'",
                          u'default',
                          u'_insertStyleName',
                          u'localStyleName',
                          u'Tix',
                          u'oldTagName',
                          u'aStyleObj',
                          u'styleOrDict',
                          u'self._bgColorButton',
                          u'self._fgColorButton',
                          u"'normal'",
                          u'stylingDict',
                          u"'active'",
                          u'_updateStylingControls',
                          u'TAG_NAME_SPLITTER',
                          u'Toolset',
                          u'dline_next']
search.search-history = [u'EnhancedText',
                         u'Enhanced',
                         u'Enhan',
                         u'Ehna',
                         u'getModel',
                         u'get',
                         u'svn',
                         u'ArticleEditor',
                         u'Tree',
                         u'subversion',
                         u'sub',
                         u'_onOpen',
                         u'_o',
                         u'id',
                         u'show',
                         u'sequence',
                         u'TypeErro',
                         u'TypeError',
                         u'messag',
                         u'message']
testing.auto-test-file-specs = ('*UnitTests.py',)
