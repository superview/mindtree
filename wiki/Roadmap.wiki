#summary This document lists future versions and features.
#labels Featured

*1.5* (internal)
   * Outline Viewer App
      * DONE: Create a Qt app for viewing MindTree outlines

*1.6* (internal)
   * Article Editing
      * DONE: HTML - All articles stored in the Model as HTML
      * DONE: Toolbars - implement toolbars for text styling
      * DONE: Cut & Paste - cut & paste text in an article
      * DONE: Shortcuts
      * DONE: Menu Items
      * DONE: Undo/Redo
      * DONE: Images - support inserting images into articles
      * DONE: Printing

*1.7* (internal)
   * Outline Editing
      * DONE: Drag & Drop - Get it working within a single outline widget
      * Drag & Drop Cursor - Update cursor during drag to indicate the drop position.
      * Drag & Drop Status tip - Update status tip during drag to print the drop position.
      * Shortcuts - 'Tab' and 'Shift-Tab' aren't working properly.

*1.8* (public alpha)
   * Plugins
      * Tool box - create the tabbed tool box
      * Import/Export Plugins
      * Spell Checking Plugin (provided pyEnchant for Python 2.6 is ready)
      * Find/Replace Plugin

*1.9* (public beta)
   * Distribution
      * Revamp Icons, Images, Cursors, etc.
      * distutils script - write an initial script for distutils
      * py2exe - Get an independent build/executable working.
      * Help File

*2.0* (Final)
   * All Capabilities of MindTree 1.x

*Future Versions*
   * Application
      * MDI - Multiple views of a single outline
      * Cut & Paste across views
      * Drag & Drop across views
      * Changes reflected across views
      * Make Content Views/Editors into plugins
      * User Preferences
   * Outline View
      * Full Undo/Redo (tree editing and across editing of different articles)
   * Article View
      * New Objects
         * Lists
         * Tables
      * Print Preview
   * Plugins
      * Make the Keyboard Plugin a single multi-tab plugin
         * Logic Tab
         * Greek Tab
         * Math Script Symbols Tab
         * Unicode Tab
      * Make the Keyboard Plugin GUI-Editable
      * Make a tabbed resource lists plugin
         * images tab
         * bookmarks tab
         * terms/definitions tab
         * external links tab
         * references tab
         * Consider that the Keyboard Plugin is very similar to a resource lists plugin,
           They are both things that can be inserted into documents.
      * Customizable HTML exporting
   * Distribution
      * Consider shareware versions